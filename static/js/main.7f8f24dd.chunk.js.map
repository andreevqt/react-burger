{"version":3,"sources":["components/page-loader/page-loader.module.css","components/custom-scroll/custom-scroll.module.css","components/modal/modal-close-btn/modal-close-btn.module.css","components/modal/modal-overlay/modal-overlay.module.css","components/burger-constructor/buttons/buttons.module.css","components/total-price/total-price.module.css","components/grid/row/row.module.css","components/grid/container/container.module.css","pages/profile/profile.module.css","components/layout/profile/profile.module.css","pages/no-match/no-match.module.css","components/order-info/inredient-row/ingredient-row.module.css","components/ingredient-details/ingredient-details.module.css","services/action-types/forgot-password.ts","services/action-types/common.ts","services/actions/common.ts","services/middleware/error.ts","services/middleware/ws.ts","services/action-types/ingredients.ts","services/reducers/ingredients.ts","services/action-types/burger-constructor.ts","services/reducers/burger-constructor.ts","services/action-types/order.ts","services/reducers/order.ts","services/action-types/auth.ts","services/reducers/auth.ts","services/reducers/forgot-password.ts","services/action-types/feed.ts","services/reducers/feed.ts","services/action-types/order-info.ts","services/reducers/order-info.ts","services/action-types/history.ts","services/reducers/history.ts","services/reducers/common.ts","services/reducers/index.ts","services/store/index.ts","constants.ts","utils/parse-jwt.ts","services/api/requests.ts","services/api/index.ts","services/actions/auth.ts","hooks/use-auth.ts","icons/loader.tsx","components/page-loader/page-loader.tsx","components/with-loader/with-loader.tsx","components/protected-route/protected-route.tsx","components/tabs/tabs.tsx","components/ingredient-card/ingredient-card.tsx","utils/is-overflown.ts","components/custom-scroll/custom-scroll.tsx","utils/throttle.ts","components/skeleton/skeleton.tsx","components/burger-ingredients/ingredients-skeleton/ingredients-skeleton.tsx","services/actions/ingredients.ts","hooks/use-ingredients.ts","components/burger-ingredients/burger-ingredients.tsx","images/order-completed.svg","components/order-details/order-details.tsx","components/modal/modal-close-btn/modal-close-btn.tsx","components/modal/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/burger-constructor/bun-dropzone/bun-dropzone.tsx","components/burger-constructor/ingredients-dropzone/sortable-ingredient/sortable-ingredient.tsx","components/burger-constructor/ingredients-dropzone/ingredients-dropzone.tsx","components/total-price/total-price.tsx","components/burger-constructor/buttons/buttons.tsx","components/burger-constructor/burger-constructor.tsx","services/actions/burger-constructor.ts","services/actions/order.ts","components/grid/col/col.tsx","components/grid/row/row.tsx","components/grid/container/container.tsx","components/menu/use-menu.ts","components/menu/menu.tsx","components/menu/menu-item/menu-item.tsx","components/notice/notice.tsx","hooks/use-error.ts","components/app-header/app-header.tsx","components/main/main.tsx","components/layout/base/base.tsx","pages/home/home.tsx","components/register-form/register-from.tsx","components/input-password/input-password.tsx","hooks/use-form.ts","pages/register/register.tsx","pages/login/login.tsx","services/actions/forgot-password.ts","hooks/use-forgot-password.ts","pages/reset-password/reset-password.tsx","pages/forgot-password/forgot-password.tsx","components/input-editable/input-editable.tsx","components/layout/profile/profile.tsx","pages/profile/profile.tsx","hooks/use-order-history.ts","services/actions/history.ts","components/inredient-preview/ingredient-preview.tsx","components/status/status.tsx","utils/moment.ts","utils/format-time.ts","components/order-card/order-card.tsx","pages/profile/history.tsx","pages/no-match/no-match.tsx","services/actions/order-info.ts","hooks/use-order-info.ts","components/order-info/inredient-row/ingredient-row.tsx","components/order-info/order-info.tsx","pages/order/order.tsx","pages/profile/index.tsx","pages/logout/logout.tsx","hooks/use-feed.ts","services/actions/feed.ts","components/dynamic-col/dynamic-col.tsx","pages/feed/feed.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient/ingredient-skeleton/ingredient-skeleton.tsx","pages/ingredient/ingredient.tsx","components/order-info/modal/modal.tsx","components/ingredient-modal/ingredient-modal.tsx","components/custom-switch/custom-switch.tsx","components/app/app.tsx","reportWebVitals.ts","index.tsx","components/order-card/order-card.module.css","components/burger-constructor/bun-dropzone/bun-dropzone.module.css","components/burger-constructor/ingredients-dropzone/ingredients-dropzone.module.css","components/ingredient-card/ingredient-card.module.css","components/skeleton/skeleton.module.css","components/order-details/order-details.module.css","components/register-form/register-form.module.css","components/dynamic-col/dynamic-col.module.css","components/menu/menu-item/menu-item.module.css","components/inredient-preview/ingredient-preview.module.css","components/burger-ingredients/burger-ingredients.module.css","components/tabs/tabs.module.css","components/burger-ingredients/ingredients-skeleton/ingredients-skeleton.module.css","components/modal/modal.module.css","components/burger-constructor/ingredients-dropzone/sortable-ingredient/sortable-ingredient.module.css","components/grid/col/col.module.css","components/menu/menu.module.css","components/notice/notice.module.css","components/app-header/app-header.module.css","components/order-info/order-info.module.css"],"names":["module","exports","Step","SET_LAST_ERROR","setLastError","err","type","payload","error","dispatch","getState","next","action","endsWith","common","lastErr","undefined","ws","wsUrl","prefix","needsAuth","socket","token","auth","accessToken","replace","url","WebSocket","onopen","onerror","onmessage","e","data","parsedData","JSON","parse","rest","success","onclose","send","stringify","close","GET_ITEMS_PENDING","GET_ITEMS_FULFILLED","GET_ITEMS_ERROR","INCREMENT_ITEM","DECREMENT_ITEM","CLEAR_COUNT","initialState","isLoading","items","ingredients","state","id","map","item","_id","count","CONSTRUCTOR_ADD_ITEM","CONSTRUCTOR_DELETE_ITEM","CONSTRUCTOR_SWAP_ITEMS","CONSTRUCTOR_RESET","bun","burgerConstructor","idx","filter","i","dragIndex","hoverIndex","cpy","dragItem","splice","SUBMIT_ORDER_PENDING","SUBMIT_ORDER_FULFILLED","SUBMIT_ORDER_ERROR","CLEAR_ORDER","order","AUTH_PENDING","AUTH_ERROR","AUTH_FULFILLED","user","FORGOT_PASSWORD_FULFILLED","FORGOT_PASSWORD_PENDING","FORGOT_PASSWORD_ERROR","step","CODE","forgotPassword","RESET","FEED_WS_SUCCESS","FEED_WS_CLOSED","FEED_WS_ERROR","FEED_WS_MESSAGE","connected","orders","total","totalToday","feed","message","ORDER_INFO_PENING","ORDER_INFO_FULFILLED","ORDER_INFO_ERROR","ORDER_INFO_CLEAR","isPending","orderInfo","HISTORY_WS_SUCCESS","HISTORY_WS_CLOSED","HISTORY_WS_ERROR","HISTORY_WS_MESSAGE","history","commonReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","applyMiddleware","thunk","store","createStore","rootReducer","useDispatch","dispatchHook","useSelector","selectorHook","API_SERVER_URL","parseJwt","base64","split","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","HttpError","response","Error","defaultOptions","defaultHeaders","request","a","method","options","headers","onRequest","fetch","body","then","ok","json","text","status","Promise","reject","createRequest","baseUrl","defaults","get","post","put","patch","delete","isExpired","splited","exp","decode","Date","now","requests","public","private","localStorage","getItem","result","setItem","refreshToken","setAuthData","api","list","create","name","number","length","register","email","password","login","logout","update","refresh","getCode","reset","setError","setLoading","useAuth","loginAction","cb","removeItem","logoutAction","registerAction","getUser","updateAction","Loader","width","height","xmlns","stroke","viewBox","fill","fillRule","strokeWidth","transform","cx","cy","r","strokeOpacity","d","attributeName","dur","from","repeatCount","to","PageLoader","className","loaderStyles","WithLoader","children","ProtectedRoute","location","useLocation","pathname","Tabs","current","onClick","tabs","tabStyles","Object","keys","key","value","active","IngredientCard","ingredient","price","image","useDrag","nanoid","ref","ingredientCardStyles","src","alt","size","classNames","isOverflown","clientWidth","clientHeight","scrollWidth","scrollHeight","CustomScroll","threshold","onScroll","grow","container","useRef","adjustHeight","useCallback","el","rect","getBoundingClientRect","innerHeight","top","style","classList","add","remove","useEffect","onElementScroll","addEventListener","removeEventListener","scrollStyles","scroll","throttle","time","last","Skeleton","variant","classes","skeletonStyles","IngredientSkeleton","array","useMemo","Array","ingredientsSkeletonStyles","num","setItems","decrement","comparator","b","includes","useIngredients","getItems","collect","ids","ingredientsCpy","find","reduce","acc","found","push","sort","calculateAmount","BurgerIngredients","sauce","main","itemsRefs","useState","currentTab","setCurrentTab","isAuthLoading","useHistory","itemsToRender","onIngredientClick","background","renderIngredients","handleOnScroll","scrollContainer","nearest","diff","Math","abs","scrollTop","offsetTop","tab","scrollIntoView","burgerIngredientsStyles","text_color_inactive","OrderDetails","orderId","orderDetailsStyles","img","ModalCloseBtn","modalCloseBtnStyles","ModalOverlay","onRequestClose","modalOverlayStyles","BODY_CLASS","Modal","containerRef","document","querySelector","handleKeyDown","code","stopPropagation","ReactDOM","createPortal","modalStyles","BunDropzone","onDrop","useDrop","accept","drop","monitor","canDrop","bunDropzoneStyles","thumbnail","isLocked","SortableIngredient","index","onDelete","moveItem","drag","preview","handlerId","getHandlerId","hover","hoverBoundingRect","hoverMiddleY","bottom","clientOffset","getClientOffset","hoverClientY","y","sortableIngredientStyles","handleClose","IngredientsDropzone","onItemDelete","ingredientsDropzoneStyles","TotalPrice","amount","amountClasses","totalPriceStyles","Buttons","totalPrice","onSubmit","canOrder","buttonsStyles","disabled","BurgerConstructor","onItemAdd","addItem","confirm","deleteItem","swapItems","Col","mod","align","layoutStyles","Row","rowStyles","Container","containerStyles","MenuContext","createContext","MenuProvider","Provider","Menu","direction","menuStyles","context","MenuItem","startIcon","label","match","useRouteMatch","path","exact","useContext","menuItemStyles","Notice","onClose","noticeStyles","useError","clearError","AppHeader","appHeaderStyles","Main","Base","Home","DndProvider","backend","HTML5Backend","RegisterForm","header","footer","registerFormStyles","InputPassword","forwardRef","placeholder","errorText","onChange","isHidden","setIsHidden","icon","onIconClick","validateRequired","validateEmail","toLowerCase","useForm","initialValues","fields","setFields","schemas","setSchemas","touched","setTouched","errors","setErrors","isDirty","setIsDirty","validateForm","validateTouched","errs","forEach","isTouched","schema","required","msg","validatonResult","isEqual","target","onBlur","handleSubmit","preventDefault","Register","Login","htmlType","setStep","useForgotPassword","getCodeAction","resetAction","ResetPassword","ForgotPassword","InputEditable","isEditable","setIsEditable","focus","Profile","description","content","descriptionClasses","profileStyles","clearField","useOrderHistory","init","IngredientPreview","ingredientPreviewStyles","Status","moment","locale","formatTime","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","OrderCard","showStatus","cardClasses","orderCardStyles","dateClasses","moreClasses","totalAmount","sliced","images","left","zIndex","isLast","position","date","createdAt","History","NoMatch","noMatchStyles","setOrder","useOrderInfo","clear","getOrder","IngredientRow","rowClasses","ingredientRowStyles","image_mobile","OrderInfo","withinModal","ingredientsToRender","idClasses","metaClasses","orderInfoStyles","Order","useParams","Index","Logout","useFeed","DynamicCol","perColumn","done","itemClasses","dynamicColStyles","floor","column","j","Feed","preparing","IngredientDetails","calories","proteins","fat","carbohydrates","image_large","titleClasses","ingredientDetailsStyles","Ingredient","firstRender","redirectTo","goBack","IngredientModal","CustomSwitch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7f8f24dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"page-loader_loader__2S8k8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"custom-scroll_scroll__3Qul1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"modal-close-btn_btn__3xgzI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__KbArF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"buttons_buttons__1j7mm\",\"price\":\"buttons_price__3cnsw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"price\":\"total-price_price__3wBMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"row_row__1UQEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3mAv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"profile_buttons__1lPOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"profile_description__1YPX4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"no-match_row__B7t35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ingredient-row_row__13ZWE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ingredient-details_title__dbD5e\",\"properties\":\"ingredient-details_properties__3O7ci\",\"property\":\"ingredient-details_property__1_SC6\",\"property-label\":\"ingredient-details_property-label__6ATed\",\"property-value\":\"ingredient-details_property-value__2FrGN\"};","export const FORGOT_PASSWORD_FULFILLED: 'FORGOT_PASSWORD_FULFILLED' = 'FORGOT_PASSWORD_FULFILLED';\r\nexport const FORGOT_PASSWORD_PENDING: 'FORGOT_PASSWORD_PENDING' = 'FORGOT_PASSWORD_PENDING';\r\nexport const FORGOT_PASSWORD_ERROR: 'FORGOT_PASSWORD_ERROR' = 'FORGOT_PASSWORD_ERROR';\r\n\r\nexport type TForgotPasswordFulfilledAction = {\r\n  readonly type: typeof FORGOT_PASSWORD_FULFILLED;\r\n};\r\n\r\nexport type TForgotPasswordErrorAction = {\r\n  readonly type: typeof FORGOT_PASSWORD_ERROR;\r\n};\r\n\r\nexport type TForgotPasswordPendingAction = {\r\n  readonly type: typeof FORGOT_PASSWORD_PENDING;\r\n};\r\n\r\nexport const enum Step {\r\n  CODE,\r\n  RESET\r\n};\r\n\r\nexport type TForgotPasswordActions =\r\n  | TForgotPasswordFulfilledAction\r\n  | TForgotPasswordPendingAction\r\n  | TForgotPasswordErrorAction;\r\n","import { TError } from '../api';\r\n\r\nexport const SET_LAST_ERROR: 'SET_LAST_ERROR' = 'SET_LAST_ERROR';\r\n\r\nexport type TSetLastErrorAction = {\r\n  readonly type: typeof SET_LAST_ERROR;\r\n  readonly payload: TError | undefined;\r\n};\r\n\r\nexport type TCommonActions = TSetLastErrorAction;\r\n","import { TError } from '../api';\r\nimport { TSetLastErrorAction, SET_LAST_ERROR } from '../action-types/common';\r\n\r\nexport const setLastError = (err: TError | undefined): TSetLastErrorAction => ({\r\n  type: SET_LAST_ERROR,\r\n  payload: err\r\n});\r\n","import { Middleware } from 'redux';\r\nimport { SET_LAST_ERROR } from '../action-types/common';\r\nimport { setLastError } from '../actions/common';\r\n\r\nconst error: Middleware = ({ dispatch, getState }) => (next) => (action) => {\r\n  if (action.type === SET_LAST_ERROR || action.type.endsWith('ERROR')) {\r\n    return next(action);\r\n  }\r\n\r\n  const { lastErr } = getState().common;\r\n  if (lastErr) {\r\n    dispatch(setLastError(undefined));\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nexport default error;\r\n","import { Middleware } from 'redux';\r\n\r\nconst ws = (wsUrl: string, prefix: string, needsAuth: boolean = false): Middleware => {\r\n  return ({ getState, dispatch }) => {\r\n    let socket: WebSocket | undefined = undefined;\r\n    return (next) => (action) => {\r\n      const { type, payload } = action;\r\n      let token = getState().auth.accessToken;\r\n      if (token) {\r\n        token = token.replace('Bearer ', '');\r\n      }\r\n\r\n      let url = wsUrl;\r\n      if (needsAuth && token) {\r\n        url += `?token=${token}`;\r\n      }\r\n\r\n      if (type === `${prefix}_WS_INIT`) {\r\n        socket = new WebSocket(url);\r\n      }\r\n\r\n      if (socket) {\r\n        socket.onopen = () => {\r\n          dispatch({ type: `${prefix}_WS_SUCCESS` });\r\n        };\r\n\r\n        socket.onerror = () => {\r\n          dispatch({ type: `${prefix}_WS_ERROR` });\r\n        };\r\n\r\n        socket.onmessage = (e) => {\r\n          const { data } = e;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...rest } = parsedData;\r\n          dispatch({ type: `${prefix}_WS_MESSAGE`, payload: rest });\r\n        };\r\n\r\n        socket.onclose = () => {\r\n          dispatch({ type: `${prefix}_WS_CLOSED` });\r\n        };\r\n\r\n        if (type === `${prefix}_WS_SEND`) {\r\n          socket.send(JSON.stringify({ ...payload, token }));\r\n        }\r\n\r\n        if (type === `${prefix}_WS_CLOSE`) {\r\n          socket.close();\r\n        }\r\n      }\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n\r\nexport default ws;\r\n","import { TIngredient } from '../api';\r\n\r\nexport const GET_ITEMS_PENDING: 'GET_ITEMS_PENDING' = 'GET_ITEMS_PENDING';\r\nexport const GET_ITEMS_FULFILLED: 'GET_ITEMS_FULFILLED' = 'GET_ITEMS_FULFILLED';\r\nexport const GET_ITEMS_ERROR: 'GET_ITEMS_ERROR' = 'GET_ITEMS_ERROR';\r\nexport const INCREMENT_ITEM: 'INCREMENT_ITEM' = 'INCREMENT_ITEM';\r\nexport const DECREMENT_ITEM: 'DECREMENT_ITEM' = 'DECREMENT_ITEM';\r\nexport const CLEAR_COUNT: 'CLEAR_COUNT' = 'CLEAR_COUNT';\r\n\r\nexport type TGetItemsPendingAction = {\r\n  readonly type: typeof GET_ITEMS_PENDING;\r\n};\r\n\r\nexport type TGetItemsFulFilledAction = {\r\n  readonly type: typeof GET_ITEMS_FULFILLED;\r\n  readonly payload: TIngredient[];\r\n};\r\n\r\nexport type TGetItemsErrorAction = {\r\n  readonly type: typeof GET_ITEMS_ERROR;\r\n};\r\n\r\nexport type TIncrementItemAction = {\r\n  readonly type: typeof INCREMENT_ITEM;\r\n  readonly payload: string;\r\n};\r\n\r\nexport type TDecrementItemAction = {\r\n  readonly type: typeof DECREMENT_ITEM;\r\n  readonly payload: string;\r\n};\r\n\r\nexport type TClearCountAction = {\r\n  readonly type: typeof CLEAR_COUNT;\r\n};\r\n\r\nexport type TIngredientActions =\r\n  | TGetItemsPendingAction\r\n  | TGetItemsFulFilledAction\r\n  | TGetItemsErrorAction\r\n  | TIncrementItemAction\r\n  | TDecrementItemAction\r\n  | TClearCountAction;\r\n","import { TIngredient } from '../api';\r\nimport {\r\n  GET_ITEMS_PENDING,\r\n  GET_ITEMS_FULFILLED,\r\n  GET_ITEMS_ERROR,\r\n  INCREMENT_ITEM,\r\n  DECREMENT_ITEM,\r\n  TIngredientActions,\r\n  CLEAR_COUNT\r\n} from '../action-types/ingredients';\r\n\r\nexport type TIngredientsState = {\r\n  isLoading: boolean;\r\n  items: TIngredient[];\r\n}\r\n\r\nexport const initialState: TIngredientsState = {\r\n  isLoading: false,\r\n  items: [],\r\n};\r\n\r\nconst ingredients = (state = initialState, action: TIngredientActions): TIngredientsState => {\r\n  switch (action.type) {\r\n    case GET_ITEMS_PENDING: {\r\n      return { ...state, isLoading: true };\r\n    }\r\n    case GET_ITEMS_FULFILLED: {\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case GET_ITEMS_ERROR: {\r\n      return initialState;\r\n    }\r\n    case INCREMENT_ITEM: {\r\n      const id = action.payload;\r\n      return {\r\n        ...state,\r\n        items: state.items.map((item) => (item._id === id\r\n          ? { ...item, count: item.count ? item.count + 1 : 1 }\r\n          : item\r\n        )),\r\n      };\r\n    }\r\n    case DECREMENT_ITEM: {\r\n      const id = action.payload;\r\n      return {\r\n        ...state,\r\n        items: state.items.map((item) => (item._id === id\r\n          ? { ...item, count: item.count && item.count > 1 ? item.count - 1 : undefined }\r\n          : item\r\n        )),\r\n      };\r\n    }\r\n    case CLEAR_COUNT: {\r\n      return {\r\n        ...state,\r\n        items: state.items.map((item) => ({ ...item, count: undefined }))\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ingredients;\r\n","import { TIngredient } from '../api';\r\n\r\nexport const CONSTRUCTOR_ADD_ITEM: 'CONSTRUCTOR_ADD_ITEM' = 'CONSTRUCTOR_ADD_ITEM';\r\nexport const CONSTRUCTOR_DELETE_ITEM: 'CONSTRUCTOR_DELETE_ITEM' = 'CONSTRUCTOR_DELETE_ITEM';\r\nexport const CONSTRUCTOR_SWAP_ITEMS: 'CONSTRUCTOR_SWAP_ITEMS' = 'CONSTRUCTOR_SWAP_ITEMS';\r\nexport const CONSTRUCTOR_RESET: 'CONSTRUCTOR_RESET' = 'CONSTRUCTOR_RESET';\r\n\r\nexport type TConstructorAddItemAction = {\r\n  readonly type: typeof CONSTRUCTOR_ADD_ITEM;\r\n  payload: TIngredient;\r\n};\r\n\r\nexport type TConstructorSwapItemsAction = {\r\n  readonly type: typeof CONSTRUCTOR_SWAP_ITEMS;\r\n  readonly payload: { dragIndex: number; hoverIndex: number };\r\n};\r\n\r\nexport type TConstructorDeleteItem = {\r\n  readonly type: typeof CONSTRUCTOR_DELETE_ITEM;\r\n  readonly payload: number;\r\n};\r\n\r\nexport type TConstructorResetAction = {\r\n  readonly type: typeof CONSTRUCTOR_RESET;\r\n};\r\n\r\nexport type TConstructorActions =\r\n  | TConstructorAddItemAction\r\n  | TConstructorSwapItemsAction\r\n  | TConstructorDeleteItem\r\n  | TConstructorResetAction;\r\n","import {\r\n  CONSTRUCTOR_ADD_ITEM,\r\n  CONSTRUCTOR_DELETE_ITEM,\r\n  CONSTRUCTOR_RESET,\r\n  CONSTRUCTOR_SWAP_ITEMS,\r\n  TConstructorActions\r\n} from '../action-types/burger-constructor';\r\n\r\nimport { TIngredient } from '../api';\r\n\r\ntype TBurgerConstructorState = {\r\n  bun: TIngredient | undefined;\r\n  items: TIngredient[];\r\n};\r\n\r\nexport const initialState: TBurgerConstructorState = {\r\n  bun: undefined,\r\n  items: []\r\n};\r\n\r\nconst burgerConstructor = (state = initialState, action: TConstructorActions): TBurgerConstructorState => {\r\n  switch (action.type) {\r\n    case CONSTRUCTOR_ADD_ITEM: {\r\n      const item = action.payload;\r\n      return item.type === 'bun' ? {\r\n        ...state,\r\n        bun: item,\r\n      } : {\r\n        ...state,\r\n        items: [...state.items, item],\r\n      };\r\n    }\r\n    case CONSTRUCTOR_DELETE_ITEM: {\r\n      const idx = action.payload;\r\n      return {\r\n        ...state,\r\n        items: state.items.filter((item, i) => i !== idx),\r\n      };\r\n    }\r\n    case CONSTRUCTOR_SWAP_ITEMS: {\r\n      const { dragIndex, hoverIndex } = action.payload;\r\n      const cpy = [...state.items];\r\n      const dragItem = cpy[dragIndex];\r\n      cpy.splice(dragIndex, 1);\r\n      cpy.splice(hoverIndex, 0, dragItem);\r\n      return {\r\n        ...state,\r\n        items: cpy,\r\n      };\r\n    }\r\n    case CONSTRUCTOR_RESET: {\r\n      return initialState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default burgerConstructor;\r\n","export const SUBMIT_ORDER_PENDING: 'SUBMIT_ORDER_PENDING' = 'SUBMIT_ORDER_PENDING';\r\nexport const SUBMIT_ORDER_FULFILLED: 'SUBMIT_ORDER_FULFILLED' = 'SUBMIT_ORDER_FULFILLED';\r\nexport const SUBMIT_ORDER_ERROR: 'SUBMIT_ORDER_ERROR' = 'SUBMIT_ORDER_ERROR';\r\nexport const CLEAR_ORDER: 'CLEAR_ORDER' = 'CLEAR_ORDER';\r\n\r\nexport type TOrder = {\r\n  name: string;\r\n  id: number;\r\n};\r\n\r\nexport type TSubmitOrderPendingAction = {\r\n  readonly type: typeof SUBMIT_ORDER_PENDING;\r\n};\r\n\r\nexport type TSubmitOrderErrorAction = {\r\n  readonly type: typeof SUBMIT_ORDER_ERROR;\r\n};\r\n\r\nexport type TSubmitOrderFulfilledAction = {\r\n  readonly type: typeof SUBMIT_ORDER_FULFILLED;\r\n  payload: TOrder;\r\n};\r\n\r\nexport type TSubmitOrderClearAction = {\r\n  readonly type: typeof CLEAR_ORDER;\r\n};\r\n\r\nexport type TOrderActions =\r\n  | TSubmitOrderPendingAction\r\n  | TSubmitOrderFulfilledAction\r\n  | TSubmitOrderErrorAction\r\n  | TSubmitOrderClearAction;\r\n","import {\r\n  SUBMIT_ORDER_ERROR,\r\n  SUBMIT_ORDER_PENDING,\r\n  SUBMIT_ORDER_FULFILLED,\r\n  CLEAR_ORDER,\r\n  TOrderActions,\r\n  TOrder\r\n} from '../action-types/order';\r\n\r\nexport type TOrderState = {\r\n  order: TOrder | undefined;\r\n  isLoading: boolean;\r\n};\r\n\r\nexport const initialState: TOrderState = {\r\n  order: undefined,\r\n  isLoading: false\r\n};\r\n\r\nconst order = (state: TOrderState = initialState, action: TOrderActions): TOrderState => {\r\n  switch (action.type) {\r\n    case SUBMIT_ORDER_PENDING: {\r\n      return { ...state, isLoading: true };\r\n    }\r\n    case SUBMIT_ORDER_FULFILLED: {\r\n      const order = action.payload;\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        order\r\n      };\r\n    }\r\n    case SUBMIT_ORDER_ERROR:\r\n    case CLEAR_ORDER: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default order;\r\n","import { TAuthData } from '../api';\r\n\r\nexport const AUTH_PENDING: 'AUTH_PENDING' = 'AUTH_PENDING';\r\nexport const AUTH_ERROR: 'AUTH_ERROR' = 'AUTH_ERROR';\r\nexport const AUTH_FULFILLED: 'AUTH_FULFILLED' = 'AUTH_FULFILLED';\r\n\r\nexport type TAuthPendingAction = {\r\n  readonly type: typeof AUTH_PENDING;\r\n};\r\n\r\nexport type TAuthErrorAction = {\r\n  readonly type: typeof AUTH_ERROR;\r\n};\r\n\r\nexport type TAuthFulfilledAction = {\r\n  readonly type: typeof AUTH_FULFILLED;\r\n  readonly payload: TAuthData | undefined;\r\n};\r\n\r\nexport type TAuthActions =\r\n  | TAuthPendingAction\r\n  | TAuthErrorAction\r\n  | TAuthFulfilledAction;\r\n","import {\r\n  AUTH_ERROR,\r\n  AUTH_FULFILLED,\r\n  AUTH_PENDING,\r\n  TAuthActions\r\n} from '../action-types/auth';\r\nimport { TUser } from '../api'\r\n\r\nexport type TAuthState = {\r\n  isLoading: boolean;\r\n  accessToken: string | undefined;\r\n  user: TUser | undefined;\r\n};\r\n\r\nexport const initialState: TAuthState = {\r\n  isLoading: false,\r\n  accessToken: undefined,\r\n  user: undefined,\r\n};\r\n\r\nconst auth = (state: TAuthState = initialState, action: TAuthActions): TAuthState => {\r\n  switch (action.type) {\r\n    case AUTH_ERROR: {\r\n      return initialState;\r\n    }\r\n    case AUTH_PENDING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    }\r\n    case AUTH_FULFILLED: {\r\n      // handle logout\r\n      if (!action.payload) {\r\n        return initialState;\r\n      }\r\n\r\n      const { user, accessToken } = action.payload;\r\n      return {\r\n        ...state,\r\n        user,\r\n        isLoading: false,\r\n        ...(accessToken && { accessToken })\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","import { Step } from '../action-types/forgot-password';\r\nimport {\r\n  FORGOT_PASSWORD_ERROR,\r\n  FORGOT_PASSWORD_FULFILLED,\r\n  FORGOT_PASSWORD_PENDING,\r\n  TForgotPasswordActions,\r\n} from '../action-types/forgot-password';\r\n\r\nexport type TForgotPasswordState = {\r\n  isLoading: boolean;\r\n  step: Step;\r\n};\r\n\r\nexport const initialState: TForgotPasswordState = {\r\n  isLoading: false,\r\n  step: Step.CODE\r\n};\r\n\r\nconst forgotPassword = (state = initialState, action: TForgotPasswordActions): TForgotPasswordState => {\r\n  switch (action.type) {\r\n    case FORGOT_PASSWORD_PENDING: {\r\n      return { ...state, isLoading: true };\r\n    }\r\n    case FORGOT_PASSWORD_ERROR: {\r\n      return initialState;\r\n    }\r\n    case FORGOT_PASSWORD_FULFILLED: {\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        step: state.step === Step.CODE\r\n          ? Step.RESET\r\n          : Step.CODE\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default forgotPassword;\r\n","import { TOrdersMessage } from '../api';\r\n\r\nexport const FEED_WS_INIT: 'FEED_WS_INIT' = 'FEED_WS_INIT';\r\nexport const FEED_WS_SUCCESS: 'FEED_WS_SUCCESS' = 'FEED_WS_SUCCESS';\r\nexport const FEED_WS_CLOSED: 'FEED_WS_CLOSED' = 'FEED_WS_CLOSED';\r\nexport const FEED_WS_CLOSE: 'FEED_WS_CLOSE' = 'FEED_WS_CLOSE';\r\nexport const FEED_WS_ERROR: 'FEED_WS_ERROR' = 'FEED_WS_ERROR';\r\nexport const FEED_WS_MESSAGE: 'FEED_WS_MESSAGE' = 'FEED_WS_MESSAGE';\r\n\r\nexport type TFeedWsInit = {\r\n  readonly type: typeof FEED_WS_INIT;\r\n};\r\n\r\nexport type TFeedWsSucess = {\r\n  readonly type: typeof FEED_WS_SUCCESS;\r\n};\r\n\r\nexport type TFeedWsClosed = {\r\n  readonly type: typeof FEED_WS_CLOSED;\r\n};\r\n\r\nexport type TFeedWsClose = {\r\n  readonly type: typeof FEED_WS_CLOSE;\r\n};\r\n\r\nexport type TFeedWsError = {\r\n  readonly type: typeof FEED_WS_ERROR;\r\n};\r\n\r\nexport type TFeedWsMessage = {\r\n  readonly type: typeof FEED_WS_MESSAGE;\r\n  readonly payload: Omit<TOrdersMessage, 'success'>;\r\n};\r\n\r\nexport type TFeedActions =\r\n  | TFeedWsInit\r\n  | TFeedWsClosed\r\n  | TFeedWsError\r\n  | TFeedWsMessage\r\n  | TFeedWsSucess\r\n  | TFeedWsClose;\r\n","import { TOrder } from '../api';\r\nimport {\r\n  FEED_WS_CLOSED,\r\n  FEED_WS_ERROR,\r\n  FEED_WS_MESSAGE,\r\n  FEED_WS_SUCCESS,\r\n  TFeedActions\r\n} from '../action-types/feed';\r\n\r\nexport type TFeedState = {\r\n  connected: boolean;\r\n  orders: TOrder[];\r\n  total: number;\r\n  totalToday: number;\r\n};\r\n\r\nexport const initialState: TFeedState = {\r\n  connected: false,\r\n  orders: [],\r\n  total: 0,\r\n  totalToday: 0,\r\n};\r\n\r\nconst feed = (state: TFeedState = initialState, action: TFeedActions): TFeedState => {\r\n  switch (action.type) {\r\n    case FEED_WS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        connected: true\r\n      };\r\n    }\r\n    case FEED_WS_MESSAGE: {\r\n      const message = action.payload;\r\n      return {\r\n        ...state,\r\n        ...message\r\n      };\r\n    }\r\n    case FEED_WS_CLOSED:\r\n    case FEED_WS_ERROR: {\r\n      return {\r\n        ...state,\r\n        connected: false\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default feed;\r\n","import { TOrder } from '../api';\r\n\r\nexport const ORDER_INFO_PENING: 'ORDER_INFO_PENING' = 'ORDER_INFO_PENING';\r\nexport const ORDER_INFO_FULFILLED: 'ORDER_INFO_FULFILLED' = 'ORDER_INFO_FULFILLED';\r\nexport const ORDER_INFO_ERROR: 'ORDER_INFO_ERROR' = 'ORDER_INFO_ERROR';\r\n\r\nexport const ORDER_INFO_CLEAR: 'ORDER_INFO_CLEAR' = 'ORDER_INFO_CLEAR';\r\n\r\nexport type TOrderInfoPendingAction = {\r\n  readonly type: typeof ORDER_INFO_PENING;\r\n};\r\n\r\nexport type TOrderInfoErrorAction = {\r\n  readonly type: typeof ORDER_INFO_ERROR;\r\n};\r\n\r\nexport type TOrderInfoFulfilledAction = {\r\n  readonly type: typeof ORDER_INFO_FULFILLED;\r\n  readonly payload: TOrder | undefined;\r\n};\r\n\r\nexport type TOrderInfoClearAction = {\r\n  readonly type: typeof ORDER_INFO_CLEAR;\r\n}\r\n\r\nexport type TOrderInfoActions =\r\n  | TOrderInfoPendingAction\r\n  | TOrderInfoErrorAction\r\n  | TOrderInfoFulfilledAction\r\n  | TOrderInfoClearAction;\r\n","import { TOrder } from '../api';\r\nimport {\r\n  TOrderInfoActions,\r\n  ORDER_INFO_ERROR,\r\n  ORDER_INFO_FULFILLED,\r\n  ORDER_INFO_PENING,\r\n  ORDER_INFO_CLEAR\r\n} from '../action-types/order-info';\r\n\r\nexport type TOrderInfoState = {\r\n  order: TOrder | undefined;\r\n  isPending: boolean;\r\n};\r\n\r\nexport const initialState: TOrderInfoState = {\r\n  order: undefined,\r\n  isPending: false,\r\n};\r\n\r\nconst orderInfo = (state = initialState, action: TOrderInfoActions): TOrderInfoState => {\r\n  switch (action.type) {\r\n    case ORDER_INFO_PENING: {\r\n      return {\r\n        ...state,\r\n        isPending: true\r\n      };\r\n    }\r\n    case ORDER_INFO_FULFILLED: {\r\n      const order = action.payload;\r\n      return {\r\n        ...state,\r\n        isPending: false,\r\n        order\r\n      };\r\n    }\r\n    case ORDER_INFO_ERROR:\r\n    case ORDER_INFO_CLEAR: {\r\n      return initialState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderInfo;\r\n","import { TOrdersMessage } from '../api';\r\n\r\nexport const HISTORY_WS_INIT: 'HISTORY_WS_INIT' = 'HISTORY_WS_INIT';\r\nexport const HISTORY_WS_SUCCESS: 'HISTORY_WS_SUCCESS' = 'HISTORY_WS_SUCCESS';\r\nexport const HISTORY_WS_CLOSE: 'HISTORY_WS_CLOSE' = 'HISTORY_WS_CLOSE';\r\nexport const HISTORY_WS_CLOSED: 'HISTORY_WS_CLOSED' = 'HISTORY_WS_CLOSED';\r\nexport const HISTORY_WS_ERROR: 'HISTORY_WS_ERROR' = 'HISTORY_WS_ERROR';\r\nexport const HISTORY_WS_MESSAGE: 'HISTORY_WS_MESSAGE' = 'HISTORY_WS_MESSAGE';\r\n\r\nexport type THistoryWsInit = {\r\n  readonly type: typeof HISTORY_WS_INIT;\r\n};\r\n\r\nexport type THistoryWsSucess = {\r\n  readonly type: typeof HISTORY_WS_SUCCESS;\r\n};\r\n\r\nexport type THistoryWsClosed = {\r\n  readonly type: typeof HISTORY_WS_CLOSED;\r\n};\r\n\r\nexport type THistoryWsClose = {\r\n  readonly type: typeof HISTORY_WS_CLOSE;\r\n};\r\n\r\nexport type THistoryWsError = {\r\n  readonly type: typeof HISTORY_WS_ERROR;\r\n};\r\n\r\nexport type THistoryWsMessage = {\r\n  readonly type: typeof HISTORY_WS_MESSAGE;\r\n  readonly payload: Omit<TOrdersMessage, 'success'>;\r\n};\r\n\r\nexport type THistoryActions =\r\n  | THistoryWsInit\r\n  | THistoryWsClosed\r\n  | THistoryWsError\r\n  | THistoryWsMessage\r\n  | THistoryWsSucess\r\n  | THistoryWsClose;\r\n  ","import { TOrder } from '../api';\r\nimport {\r\n  HISTORY_WS_CLOSED,\r\n  HISTORY_WS_ERROR,\r\n  THistoryActions,\r\n  HISTORY_WS_MESSAGE,\r\n  HISTORY_WS_SUCCESS\r\n} from '../action-types/history';\r\n\r\nexport type THistoryState = {\r\n  connected: boolean;\r\n  orders: TOrder[];\r\n  total: number;\r\n  totalToday: number;\r\n};\r\n\r\nexport const initialState: THistoryState = {\r\n  connected: false,\r\n  orders: [],\r\n  total: 0,\r\n  totalToday: 0,\r\n};\r\n\r\nconst history = (state: THistoryState = initialState, action: THistoryActions): THistoryState => {\r\n  switch (action.type) {\r\n    case HISTORY_WS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        connected: true\r\n      };\r\n    }\r\n    case HISTORY_WS_MESSAGE: {\r\n      const message = action.payload;\r\n      return {\r\n        ...state,\r\n        ...message\r\n      };\r\n    }\r\n    case HISTORY_WS_ERROR:\r\n    case HISTORY_WS_CLOSED: {\r\n      return {\r\n        ...state,\r\n        connected: false\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default history;\r\n","import { SET_LAST_ERROR, TCommonActions } from '../action-types/common';\r\nimport { TError } from '../api'\r\n\r\nexport type TCommonState = {\r\n  lastErr: TError | undefined;\r\n};\r\n\r\nexport const initialState: TCommonState = {\r\n  lastErr: undefined\r\n};\r\n\r\nconst commonReducer = (state = initialState, action: TCommonActions): TCommonState => {\r\n  switch (action.type) {\r\n    case SET_LAST_ERROR: {\r\n      const lastErr = action.payload;\r\n      return {\r\n        ...state,\r\n        lastErr\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default commonReducer;\r\n","import { combineReducers } from 'redux';\r\nimport ingredients from './ingredients';\r\nimport burgerConstructor from './burger-constructor';\r\nimport order from './order';\r\nimport auth from './auth';\r\nimport forgotPassword from './forgot-password';\r\nimport feed from './feed';\r\nimport orderInfo from './order-info';\r\nimport history from './history';\r\nimport common from './common';\r\n\r\nexport default combineReducers({\r\n  ingredients,\r\n  burgerConstructor,\r\n  order,\r\n  auth,\r\n  feed,\r\n  orderInfo,\r\n  history,\r\n  forgotPassword,\r\n  common\r\n});\r\n","import thunk, { ThunkAction } from 'redux-thunk';\r\nimport { useDispatch as dispatchHook, useSelector as selectorHook, TypedUseSelectorHook } from 'react-redux';\r\nimport { compose, createStore, applyMiddleware, ActionCreator } from 'redux';\r\nimport error from '../middleware/error';\r\nimport ws from '../middleware/ws';\r\nimport rootReducer from '../reducers';\r\nimport { TAuthActions } from '../action-types/auth';\r\nimport { TConstructorActions } from '../action-types/burger-constructor';\r\nimport { TForgotPasswordActions } from '../action-types/forgot-password';\r\nimport { TIngredientActions } from '../action-types/ingredients';\r\nimport { TOrderActions } from '../action-types/order';\r\nimport { TFeedActions } from '../action-types/feed';\r\nimport { TOrderInfoActions } from '../action-types/order-info';\r\nimport { THistoryActions } from '../action-types/history';\r\nimport { TCommonActions } from '../action-types/common';\r\n\r\ntype TApplicationActions =\r\n  | TConstructorActions\r\n  | TForgotPasswordActions\r\n  | TIngredientActions\r\n  | TOrderActions\r\n  | TOrderInfoActions\r\n  | TFeedActions\r\n  | THistoryActions\r\n  | TCommonActions\r\n  | TAuthActions;\r\n\r\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && process.env.NODE_ENV === 'development'\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n  : compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(\r\n  thunk,\r\n  error,\r\n  ws('wss://norma.nomoreparties.space/orders/all', 'FEED'),\r\n  ws('wss://norma.nomoreparties.space/orders', 'HISTORY', true)\r\n));\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk<ReturnType = void> = ActionCreator<\r\n  ThunkAction<ReturnType, RootState, unknown, TApplicationActions>\r\n>;\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\nexport default store;\r\n","export const API_SERVER_URL = 'https://norma.nomoreparties.space/api';\r\nexport const KEY_ESC = \"Escape\";\r\n","const parseJwt = (token: string) => {\r\n  const base64Url = token.split('.')[1];\r\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  const jsonPayload = decodeURIComponent(atob(base64).split('')\r\n    .map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\r\n\r\n  return JSON.parse(jsonPayload);\r\n};\r\n\r\nexport default parseJwt;\r\n","import { API_SERVER_URL } from '../../constants';\r\nimport { setAuthData } from '../actions/auth';\r\nimport decode from '../../utils/parse-jwt';\r\nimport store from '../store';\r\n\r\nexport class HttpError extends Error {\r\n  response: any;\r\n};\r\n\r\nexport type THttpHeaders = {\r\n  [name: string]: string;\r\n};\r\n\r\nexport type TFetchOptions = {\r\n  headers?: THttpHeaders;\r\n  onRequest?: (headers: THttpHeaders) => Promise<void>;\r\n};\r\n\r\nexport type THttpMethod =\r\n  | 'GET'\r\n  | 'POST'\r\n  | 'PUT'\r\n  | 'PATCH'\r\n  | 'DELETE';\r\n\r\nconst defaultOptions: TFetchOptions = {\r\n};\r\n\r\nconst defaultHeaders: THttpHeaders = {\r\n  'Content-Type': 'application/json',\r\n  'Accept': 'application/json'\r\n};\r\n\r\ntype TRequestParams = {\r\n  url: string;\r\n  method: THttpMethod;\r\n  data?: Object;\r\n  options: TFetchOptions;\r\n};\r\n\r\nconst request = async <T = any>({ url, method, data, options }: TRequestParams) => {\r\n  const headers = { ...defaultHeaders, ...options.headers };\r\n\r\n  if (options.onRequest) {\r\n    await options.onRequest(headers);\r\n  }\r\n\r\n  return fetch(url, {\r\n    method,\r\n    headers: headers,\r\n    ...(method !== 'GET' && data && { body: JSON.stringify(data) }\r\n    )\r\n  }).then((response) =>\r\n    response.ok\r\n      ? response.json() as Promise<T>\r\n      : response.text()\r\n        .then((text) => {\r\n          const err = new HttpError(`Status: ${response.status}. Message: ${text}`)\r\n          try {\r\n            err.response = JSON.parse(text);\r\n          } catch (e) {\r\n            err.response = text;\r\n          }\r\n          return Promise.reject(err);\r\n        })\r\n  );\r\n};\r\n\r\nconst createRequest = (baseUrl: string, options: Partial<TFetchOptions> = {}) => {\r\n  const defaults = { ...defaultOptions, ...options };\r\n  return {\r\n    get: <T = any>(url: string, options: TFetchOptions = {}) => request<T>({ url: `${baseUrl}${url}`, method: 'GET', options: { ...defaults, ...options } }),\r\n    post: <T = any>(url: string, data: any, options: TFetchOptions = {}) => request<T>({ url: `${baseUrl}${url}`, method: 'POST', data, options: { ...defaults, ...options } }),\r\n    put: <T = any>(url: string, data: any, options: TFetchOptions = {}) => request<T>({ url: `${baseUrl}${url}`, method: 'PUT', data, options: { ...defaults, ...options } }),\r\n    patch: <T = any>(url: string, data: any, options: TFetchOptions = {}) => request<T>({ url: `${baseUrl}${url}`, method: 'PATCH', data, options: { ...defaults, ...options } }),\r\n    delete: <T = any>(url: string, data: any, options: TFetchOptions = {}) => request<T>({ url: `${baseUrl}${url}`, method: 'DELETE', data, options: { ...defaults, ...options } })\r\n  };\r\n};\r\n\r\nconst isExpired = (token: string) => {\r\n  const splited = token.split(' ')[1];\r\n  const { exp } = decode(splited);\r\n  const current = Date.now() / 1000;\r\n  return current > exp;\r\n};\r\n\r\nconst requests = {\r\n  public: createRequest(API_SERVER_URL),\r\n  private: createRequest(\r\n    API_SERVER_URL,\r\n    {\r\n      onRequest: async (headers) => {\r\n        const accessToken = store?.getState()?.auth.accessToken;\r\n        if (accessToken && !isExpired(accessToken)) {\r\n          headers['authorization'] = accessToken;\r\n          return;\r\n        }\r\n\r\n        const token = localStorage.getItem('refreshToken');\r\n        if (!token) {\r\n          throw new Error('Refresh token is missing');\r\n        }\r\n\r\n        const result = await requests.public.post('/auth/token', { token });\r\n        localStorage.setItem('refreshToken', result.refreshToken);\r\n\r\n        const { auth } = store.getState()\r\n        store.dispatch(setAuthData({ ...auth, accessToken: result.accessToken }));\r\n\r\n        headers['authorization'] = result.accessToken;\r\n      }\r\n    }\r\n  )\r\n};\r\n\r\nexport default requests;\r\n","import requests, { HttpError } from './requests';\r\n\r\nexport type TResponse = {\r\n  success: boolean;\r\n};\r\n\r\nexport type TUser = {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n};\r\n\r\nexport type TIngredientType = 'bun' | 'main' | 'sauce';\r\n\r\nexport type TIngredient = {\r\n  _id: string;\r\n  id?: string;\r\n  name: string;\r\n  type: TIngredientType;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n  calories: number;\r\n  price: number;\r\n  image: string;\r\n  image_mobile: string;\r\n  image_large: string;\r\n  __v: number;\r\n  count?: number;\r\n};\r\n\r\nexport type TTokens = {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n};\r\n\r\nexport type TUserResponse = TResponse & {\r\n  user: TUser;\r\n};\r\n\r\nexport type TUpdateResponse = TUserResponse;\r\n\r\nexport type TLoginResponse = TUserResponse & TTokens;\r\n\r\nexport type TRegisterResponse = TLoginResponse;\r\n\r\nexport type TResetResponse = TResponse & TTokens;\r\n\r\nexport type TLogoutResponse = TResponse & {\r\n  message: string;\r\n};\r\n\r\nexport type TIngredientsResponse = TResponse & {\r\n  data: TIngredient[];\r\n};\r\n\r\nexport type TOrderResponse = TResponse & {\r\n  order: {\r\n    number: number;\r\n  };\r\n  name: string;\r\n};\r\n\r\nexport type TOrderStatus =\r\n  | 'created'\r\n  | 'pending'\r\n  | 'done';\r\n\r\nexport type TOrder = {\r\n  _id: string,\r\n  ingredients: string[],\r\n  status: TOrderStatus,\r\n  name: string,\r\n  number: number,\r\n  createdAt: string,\r\n  updatedAt: string\r\n};\r\n\r\nexport type TGetOrderResponse = TResponse & {\r\n  orders: TOrder[];\r\n};\r\n\r\nexport type TOrdersMessage = TResponse & {\r\n  orders: TOrder[];\r\n  total: number;\r\n  totalToday: number;\r\n};\r\n\r\nexport type TError = string | {\r\n  message: string;\r\n  response?: {\r\n    message: string\r\n  }\r\n};\r\n\r\nexport type TAuthData = {\r\n  user?: TUser;\r\n  accessToken?: string;\r\n};\r\n\r\nexport type TUpdateProps = {\r\n  name?: string;\r\n  password?: string;\r\n  email?: string;\r\n};\r\n\r\nconst api = {\r\n  ingredients: {\r\n    list: () => requests.public.get<TIngredientsResponse>(`/ingredients`)\r\n      .then((result) => result.data),\r\n  },\r\n  order: {\r\n    create: (ingredients: string[]) => requests.private.post(`/orders`, { ingredients })\r\n      .then(({ name, order }) => ({ name, order })),\r\n    get: (number: number) => requests.public.get<TGetOrderResponse>(`/orders/${number}`).then(({ orders }) => orders.length > 0 ? orders[0] : undefined)\r\n  },\r\n  auth: {\r\n    register: (email: string, password: string, name: string) => requests.public.post<TRegisterResponse>(`/auth/register`, { email, password, name }),\r\n    login: (email: string, password: string) => requests.public.post<TLoginResponse>(`/auth/login`, { email, password }),\r\n    logout: (token: string) => requests.public.post<TLogoutResponse>(`/auth/logout`, { token }),\r\n    get: () => requests.private.get<TUserResponse>(`/auth/user`),\r\n    update: (data: TUpdateProps) => requests.private.patch<TUpdateResponse>(`/auth/user`, data),\r\n    refresh: (token: string) => requests.public.post<TResetResponse>(`/auth/token`, { token }),\r\n  },\r\n  password: {\r\n    getCode: (email: string) => requests.public.post(`/password-reset`, { email }),\r\n    reset: (password: string, token: string) => requests.public.post(`/password-reset/reset`, { password, token })\r\n  }\r\n};\r\n\r\nexport {\r\n  HttpError\r\n};\r\n\r\nexport default api;\r\n","import api, { TUpdateProps, TAuthData } from '../api';\r\nimport { AppThunk, AppDispatch } from '../store';\r\nimport { setLastError } from './common';\r\nimport {\r\n  AUTH_ERROR,\r\n  AUTH_FULFILLED,\r\n  AUTH_PENDING,\r\n  TAuthErrorAction,\r\n  TAuthFulfilledAction,\r\n  TAuthPendingAction\r\n} from '../action-types/auth';\r\n\r\nexport const setError = (): TAuthErrorAction => ({\r\n  type: AUTH_ERROR\r\n});\r\n\r\nexport const setAuthData = (data: TAuthData | undefined): TAuthFulfilledAction => ({\r\n  type: AUTH_FULFILLED,\r\n  payload: data\r\n});\r\n\r\nexport const setLoading = (): TAuthPendingAction => ({\r\n  type: AUTH_PENDING\r\n});\r\n\r\nexport const register: AppThunk = (email: string, password: string, name: string) => async (dispatch: AppDispatch) => {\r\n  dispatch(setLoading());\r\n\r\n  try {\r\n    const { user, accessToken, refreshToken } = await api.auth.register(email, password, name);\r\n    dispatch(setAuthData({ user, accessToken }));\r\n    localStorage.setItem('refreshToken', refreshToken);\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n};\r\n\r\nexport const login: AppThunk = (email: string, password: string) => async (dispatch: AppDispatch) => {\r\n  dispatch(setLoading());\r\n\r\n  try {\r\n    const { user, accessToken, refreshToken } = await api.auth.login(email, password);\r\n    dispatch(setAuthData({ user, accessToken }));\r\n    localStorage.setItem('refreshToken', refreshToken);\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n};\r\n\r\nexport const getUser: AppThunk = () => async (dispatch: AppDispatch, getState) => {\r\n  const { auth } = getState();\r\n  dispatch(setLoading());\r\n\r\n  try {\r\n    const { user } = await api.auth.get();\r\n    dispatch(setAuthData({ ...auth, user }));\r\n  } catch (err: any) {\r\n    dispatch(setLastError(undefined));\r\n    dispatch(setError());\r\n  }\r\n};\r\n\r\nexport const refresh: AppThunk = () => async (dispatch: AppDispatch, getState) => {\r\n  const { auth } = getState();\r\n\r\n  const token = localStorage.getItem('refreshToken');\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  dispatch(setLoading());\r\n\r\n  try {\r\n    const { refreshToken, accessToken } = await api.auth.refresh(token);\r\n    localStorage.setItem('refreshToken', refreshToken);\r\n\r\n    dispatch(setAuthData({ ...auth, accessToken }));\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n};\r\n\r\nexport const logout: AppThunk = (cb) => async (dispatch: AppDispatch) => {\r\n  const token = localStorage.getItem('refreshToken');\r\n  if (!token) {\r\n    return;\r\n  }\r\n\r\n  dispatch(setLoading());\r\n\r\n  try {\r\n    await api.auth.logout(token);\r\n    localStorage.removeItem('refreshToken');\r\n\r\n    dispatch(setAuthData(undefined));\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n\r\n  if (cb) {\r\n    cb();\r\n  }\r\n};\r\n\r\nexport const update: AppThunk = (data: TUpdateProps) => async (dispatch: AppDispatch, getState) => {\r\n  const { auth } = getState();\r\n  dispatch(setLoading());\r\n\r\n  try {\r\n    const { user } = await api.auth.update(data);\r\n    dispatch(setAuthData({ ...auth, user }));\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n};\r\n","import { useDispatch, useSelector } from '../services/store';\r\nimport { TUpdateProps } from '../services/api';\r\nimport {\r\n  login as loginAction,\r\n  register as registerAction,\r\n  getUser as getUserAction,\r\n  logout as logoutAction,\r\n  update as updateAction\r\n} from '../services/actions/auth';\r\n\r\nconst useAuth = () => {\r\n  const { user, isLoading } = useSelector(\r\n    (store: any) => ({\r\n      user: store.auth.user,\r\n      isLoading: store.auth.isLoading\r\n    })\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const login = (email: string, password: string) => dispatch(loginAction(email, password));\r\n  const register = (email: string, password: string, name: string) => dispatch(registerAction(email, password, name));\r\n  const getUser = () => dispatch(getUserAction());\r\n  // TODO: fixme\r\n  const logout = (cb: () => void) => dispatch(logoutAction(cb));\r\n  const update = (data: TUpdateProps) => dispatch(updateAction(data));\r\n\r\n  return {\r\n    login,\r\n    logout,\r\n    register,\r\n    getUser,\r\n    update,\r\n    user,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useAuth;\r\n","import React from 'react';\r\nimport { TIconProps } from '../types/common';\r\n\r\nconst Loader: React.FC<TIconProps> = ({\r\n  width = 86,\r\n  height = 86\r\n}) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={width}\r\n    height={height}\r\n    stroke=\"currentColor\"\r\n    viewBox=\"0 0 38 38\"\r\n  >\r\n    <g\r\n      fill=\"none\"\r\n      fillRule=\"evenodd\"\r\n      strokeWidth=\"2\"\r\n      transform=\"translate(1 1)\"\r\n    >\r\n      <circle cx=\"18\" cy=\"18\" r=\"18\" strokeOpacity=\"0.5\" />\r\n      <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n        <animateTransform\r\n          attributeName=\"transform\"\r\n          dur=\"1s\"\r\n          from=\"0 18 18\"\r\n          repeatCount=\"indefinite\"\r\n          to=\"360 18 18\"\r\n          type=\"rotate\"\r\n        />\r\n      </path>\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Loader from '../../icons/loader';\r\nimport loaderStyles from './page-loader.module.css';\r\n\r\nconst PageLoader: React.FC = () => (\r\n  <div className={loaderStyles['loader']}>\r\n    <Loader width={48} height={48} />\r\n  </div>\r\n);\r\n\r\nexport default PageLoader;\r\n","import React from 'react';\r\nimport PageLoader from '../page-loader/page-loader';\r\n\r\ntype TWithLoaderProps = {\r\n  isLoading?: boolean;\r\n};\r\n\r\nconst WithLoader: React.FC<TWithLoaderProps> = ({ isLoading = false, children }) => (\r\n  <>\r\n    {children}\r\n    {isLoading && <PageLoader />}\r\n  </>\r\n);\r\n\r\nexport default WithLoader;\r\n","import React from 'react';\r\nimport { Route, Redirect, useLocation, RouteProps } from 'react-router-dom';\r\nimport useAuth from '../../hooks/use-auth';\r\n\r\nconst ProtectedRoute: React.FC<RouteProps> = ({ children, ...rest }) => {\r\n  const { user } = useAuth();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {\r\n        user\r\n          ? children\r\n          : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport tabStyles from './tabs.module.css';\r\n\r\ntype TTabsProps = {\r\n  className?: string;\r\n  current: string;\r\n  onClick: (value: string) => void;\r\n  tabs: { [name: string]: React.ReactNode };\r\n};\r\n\r\nconst Tabs: React.FC<TTabsProps> = ({\r\n  className,\r\n  current,\r\n  onClick,\r\n  children,\r\n  tabs\r\n}) => (\r\n  <div\r\n    className={className}\r\n  >\r\n    <div className={tabStyles['tabs-list']}>\r\n      {Object.keys(tabs).map((key) => (\r\n        <div\r\n          key={key}\r\n          className={tabStyles['tab-item']}\r\n        >\r\n          <Tab\r\n            value={key}\r\n            active={key === current}\r\n            onClick={onClick}\r\n          >\r\n            {tabs[key]}\r\n          </Tab>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Tabs;\r\n","import React from 'react';\r\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { nanoid } from 'nanoid';\r\nimport { useDrag } from 'react-dnd';\r\nimport classNames from 'classnames';\r\nimport ingredientCardStyles from './ingredient-card.module.css';\r\nimport { TIngredient } from '../../services/api';\r\n\r\ntype TIngredientCardProps = {\r\n  ingredient: TIngredient;\r\n  onClick: (() => void) | ((e: React.SyntheticEvent) => void);\r\n};\r\n\r\nconst IngredientCard: React.FC<TIngredientCardProps> = ({\r\n  ingredient,\r\n  onClick\r\n}) => {\r\n  const {\r\n    name,\r\n    price,\r\n    count,\r\n    image,\r\n    type,\r\n  } = ingredient;\r\n\r\n  const [, ref] = useDrag({\r\n    type: type === 'bun' ? 'bun' : 'ingredient',\r\n    item: {\r\n      ...ingredient,\r\n      id: nanoid(),\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      data-test=\"ingredient-card\"\r\n      className={ingredientCardStyles['card']}\r\n      onClick={onClick}\r\n      ref={ref}\r\n    >\r\n      <div className=\"pl-4 pr-4\">\r\n        <img\r\n          className={ingredientCardStyles['image']}\r\n          src={image}\r\n          alt={name}\r\n        />\r\n        {count && <Counter count={count} size=\"default\" />}\r\n      </div>\r\n      <div className={classNames(ingredientCardStyles['price'], 'mt-1 mb-1')}>\r\n        <span className=\"text_type_digits-default\">{price}</span>\r\n        <CurrencyIcon type=\"primary\" />\r\n      </div>\r\n      <h5 className={classNames(ingredientCardStyles['title'], 'text_type_main-default')}>{name}</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientCard;\r\n","const isOverflown = ({\r\n  clientWidth,\r\n  clientHeight,\r\n  scrollWidth,\r\n  scrollHeight,\r\n}: HTMLElement) => (scrollHeight > clientHeight) || (scrollWidth > clientWidth);\r\n\r\nexport default isOverflown;\r\n","import React, { useRef, useEffect, useCallback } from 'react';\r\nimport classNames from 'classnames';\r\nimport scrollStyles from './custom-scroll.module.css';\r\nimport isOverflown from '../../utils/is-overflown';\r\n\r\ntype TCustomScrollProps = {\r\n  className?: string;\r\n  threshold?: number;\r\n  onScroll?: ((container: HTMLDivElement | null) => void);\r\n  grow?: boolean;\r\n};\r\n\r\nconst CustomScroll: React.FC<TCustomScrollProps> = ({\r\n  className,\r\n  children,\r\n  threshold = 40,\r\n  onScroll,\r\n  grow = false,\r\n}) => {\r\n  const container = useRef<HTMLDivElement>(null);\r\n\r\n  const adjustHeight = useCallback(() => {\r\n    const el = container.current;\r\n    if (!el) {\r\n      return;\r\n    }\r\n\r\n    const rect = el.getBoundingClientRect();\r\n\r\n    const height = `${window.innerHeight - rect.top - threshold}px`;\r\n    el.style.height = grow ? height : el.style.height;\r\n\r\n    if (isOverflown(el)) {\r\n      el.classList.add('pr-2');\r\n      el.classList.remove('pr-4');\r\n      return;\r\n    }\r\n    el.classList.remove('pr-2');\r\n    el.classList.add('pr-4');\r\n  }, [threshold, grow]);\r\n\r\n  useEffect(() => {\r\n    const onElementScroll = () => {\r\n      if (onScroll) {\r\n        onScroll(container.current);\r\n      }\r\n    };\r\n\r\n    const el = container.current;\r\n    if (el) {\r\n      el.addEventListener('scroll', onElementScroll);\r\n    }\r\n    window.addEventListener('resize', adjustHeight);\r\n\r\n    return () => {\r\n      if (el) {\r\n        el.removeEventListener('scroll', onElementScroll);\r\n      }\r\n      window.removeEventListener('resize', adjustHeight);\r\n    };\r\n  }, [adjustHeight, onScroll]);\r\n\r\n  useEffect(() => {\r\n    adjustHeight();\r\n  }, [children, adjustHeight]);\r\n\r\n  return (\r\n    <div\r\n      className={classNames(scrollStyles.scroll, 'custom-scroll pr-2', className)}\r\n      ref={container}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomScroll;\r\n","// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_throttle\r\n\r\nconst throttle = (cb: (...args: any[]) => void, time: number) => {\r\n  let last = 0;\r\n  return (...args : any[]) => {\r\n    const now = Date.now();\r\n    if (now - last >= time) {\r\n      cb(...args);\r\n      last = now;\r\n    }\r\n  };\r\n};\r\n\r\nexport default throttle;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport skeletonStyles from './skeleton.module.css';\r\n\r\ntype TSkeletonProps = {\r\n  className?: string;\r\n  variant?: 'text' | 'rounded' | 'rectangular';\r\n  width?: string;\r\n  height?: string;\r\n};\r\n\r\nconst Skeleton: React.FC<TSkeletonProps> = ({\r\n  variant = 'rectangular',\r\n  width = '100%',\r\n  height = 'auto',\r\n  className,\r\n}) => {\r\n  const classes = classNames(skeletonStyles['skeleton'], {\r\n    [skeletonStyles['text']]: variant === 'text',\r\n    [skeletonStyles['rounded']]: variant === 'rounded',\r\n    [skeletonStyles['rectangular']]: variant === 'rectangular',\r\n  }, className);\r\n\r\n  return <div className={classes} style={{ width, height }} />;\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useMemo } from 'react';\r\nimport Skeleton from '../../skeleton/skeleton';\r\nimport ingredientsSkeletonStyles from './ingredients-skeleton.module.css';\r\n\r\ntype TIngredientSkeletonProps = {\r\n  count?: number;\r\n};\r\n\r\nconst IngredientSkeleton: React.FC<TIngredientSkeletonProps> = ({\r\n  count = 4\r\n}) => {\r\n  const array = useMemo(() => [...Array(count).keys()], [count]);\r\n  return (\r\n    <div>\r\n      <Skeleton variant=\"text\" height=\"25px\" width=\"20%\" className=\"mt-10 mb-6\" />\r\n      <div className={ingredientsSkeletonStyles['grid']}>\r\n        {array.map((num) => (\r\n          <div key={num} className={ingredientsSkeletonStyles['card']}>\r\n            <Skeleton variant=\"rectangular\" height=\"100px\" />\r\n            <Skeleton width=\"60%\" className=\"mt-4\" height=\"15px\" />\r\n            <Skeleton width=\"40%\" className=\"mt-2\" height=\"15px\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientSkeleton;\r\n","import api, { TIngredient } from '../api';\r\nimport { AppThunk } from '../store';\r\nimport { setLastError } from './common';\r\nimport {\r\n  INCREMENT_ITEM,\r\n  DECREMENT_ITEM,\r\n  CLEAR_COUNT,\r\n  GET_ITEMS_ERROR,\r\n  GET_ITEMS_FULFILLED,\r\n  GET_ITEMS_PENDING,\r\n  TGetItemsErrorAction,\r\n  TGetItemsPendingAction,\r\n  TIncrementItemAction,\r\n  TDecrementItemAction,\r\n  TClearCountAction,\r\n  TGetItemsFulFilledAction\r\n} from '../action-types/ingredients';\r\n\r\nexport const setItems = (items: TIngredient[]): TGetItemsFulFilledAction => ({\r\n  type: GET_ITEMS_FULFILLED,\r\n  payload: items,\r\n});\r\n\r\nexport const setError = (): TGetItemsErrorAction => ({\r\n  type: GET_ITEMS_ERROR,\r\n});\r\n\r\nexport const setLoading = (): TGetItemsPendingAction => ({\r\n  type: GET_ITEMS_PENDING,\r\n});\r\n\r\nexport const increment = (id: string): TIncrementItemAction => ({\r\n  type: INCREMENT_ITEM,\r\n  payload: id\r\n});\r\n\r\nexport const decrement = (id: string): TDecrementItemAction => ({\r\n  type: DECREMENT_ITEM,\r\n  payload: id\r\n});\r\n\r\nexport const clearCount = (): TClearCountAction => ({\r\n  type: CLEAR_COUNT\r\n});\r\n\r\nexport const getItems: AppThunk = () => async (dispatch, getState) => {\r\n  const { isLoading } = getState().ingredients;\r\n  if (isLoading) {\r\n    return;\r\n  }\r\n\r\n  dispatch(setLoading());\r\n\r\n  try {\r\n    const items = await api.ingredients.list();\r\n    dispatch(setItems(items));\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err))\r\n    dispatch(setError());\r\n  }\r\n};\r\n","import { useSelector, useDispatch } from '../services/store';\r\nimport { getItems as getItemsAction } from '../services/actions/ingredients';\r\nimport { TIngredient } from '../services/api';\r\n\r\nconst comparator = (a: TIngredient, b: TIngredient) => {\r\n  if (a.type === 'bun' && ['sauce', 'main'].includes(b.type)) {\r\n    return -1;\r\n  }\r\n\r\n  if (['sauce', 'main'].includes(a.type) && b.type === 'bun') {\r\n    return 1;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nconst useIngredients = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    items,\r\n    isLoading\r\n  } = useSelector((store) => store.ingredients);\r\n\r\n  const getItems = () => dispatch(getItemsAction());\r\n\r\n  const collect = (ids: string[]) => {\r\n    const ingredientsCpy = items.map((item) => ({ ...item }));\r\n    return ids\r\n      .map((id) => ingredientsCpy.find((ingredient) => ingredient._id === id))\r\n      .reduce((acc: TIngredient[], current) => {\r\n        const found = acc.find((item) => item._id === current?._id);\r\n        if (found) {\r\n          found.count = found.count ? found.count + 1 : 1;\r\n          return acc;\r\n        }\r\n        if (current) {\r\n          current.count = 1;\r\n          acc.push(current);\r\n        }\r\n        return acc;\r\n      }, [])\r\n      .sort(comparator);\r\n  };\r\n\r\n  const calculateAmount = (items: TIngredient[]) => items.reduce((acc, current) => acc + (current ? current.price * (current.count || 1) : 0), 0);\r\n\r\n  return {\r\n    items,\r\n    isLoading,\r\n    getItems,\r\n    collect,\r\n    calculateAmount,\r\n  };\r\n};\r\n\r\nexport default useIngredients;\r\n","import React, {\r\n  useState,\r\n  useRef,\r\n  useMemo,\r\n  useCallback,\r\n} from 'react';\r\nimport classNames from 'classnames';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport burgerIngredientsStyles from './burger-ingredients.module.css';\r\nimport Tabs from '../tabs/tabs';\r\nimport IngredientCard from '../ingredient-card/ingredient-card';\r\nimport CustomScroll from '../custom-scroll/custom-scroll';\r\nimport throttle from '../../utils/throttle';\r\nimport IngredientSkeleton from './ingredients-skeleton/ingredients-skeleton';\r\nimport useIngredients from '../../hooks/use-ingredients';\r\nimport useAuth from '../../hooks/use-auth';\r\nimport { TIngredient, TIngredientType } from '../../services/api';\r\n\r\nconst BurgerIngredients: React.FC = () => {\r\n  const tabs = {\r\n    bun: 'Булки',\r\n    sauce: 'Соусы',\r\n    main: 'Начинки',\r\n  };\r\n\r\n  const itemsRefs = useRef<{ [name in TIngredientType]: HTMLDivElement | null }>({ bun: null, sauce: null, main: null });\r\n  const [currentTab, setCurrentTab] = useState('bun');\r\n  const { items, isLoading } = useIngredients();\r\n  const { isLoading: isAuthLoading } = useAuth();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const itemsToRender = useMemo(() => (\r\n    items.reduce((acc: { bun: Array<TIngredient>; sauce: Array<TIngredient>; main: Array<TIngredient> }, item: TIngredient) => {\r\n      acc[item.type] = [...acc[item.type], item];\r\n      return acc;\r\n    }, { bun: [], sauce: [], main: [] })\r\n  ), [items]);\r\n\r\n  const onIngredientClick = (item: TIngredient) => () => {\r\n    history.push({\r\n      pathname: `/ingredients/${item._id}`,\r\n      state: { background: location }\r\n    });\r\n  };\r\n\r\n  const renderIngredients = (type: TIngredientType) => (\r\n    itemsToRender[type].map((item: TIngredient) => (\r\n      <IngredientCard\r\n        key={item._id}\r\n        ingredient={item}\r\n        onClick={onIngredientClick(item)}\r\n      />\r\n    ))\r\n  );\r\n\r\n  const handleOnScroll = useCallback(throttle((scrollContainer: HTMLDivElement) => {\r\n    const nearest = (Object.keys(itemsRefs.current) as Array<TIngredientType>)\r\n      .reduce((acc: { el: HTMLDivElement | null; diff: number; type: TIngredientType } | null, type: TIngredientType) => {\r\n        const el = itemsRefs.current[type];\r\n        if (!el) {\r\n          return acc;\r\n        }\r\n        const diff = Math.abs(scrollContainer.scrollTop - el.offsetTop);\r\n        if ((acc && diff < acc.diff) || !acc) {\r\n          acc = { el, diff, type }; // eslint-disable-line\r\n        }\r\n        return acc;\r\n      }, null);\r\n\r\n    if (nearest) {\r\n      setCurrentTab(nearest.type);\r\n    }\r\n\r\n  }, 100), []);\r\n\r\n  const onTabClick = (tab: string) => {\r\n    const el = itemsRefs.current[tab as TIngredientType];\r\n    if (el) {\r\n      el.scrollIntoView();\r\n    }\r\n    setCurrentTab(tab);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"text text_type_main-large mt-10 mb-5\">Соберите бургер</h2>\r\n      <Tabs\r\n        current={currentTab}\r\n        onClick={onTabClick}\r\n        tabs={tabs}\r\n      >\r\n        {\r\n          (isLoading || isAuthLoading) ? <IngredientSkeleton /> : (\r\n            <CustomScroll\r\n              onScroll={handleOnScroll}\r\n              className=\"pr-4\"\r\n              grow\r\n            >\r\n              {\r\n                (Object.keys(itemsToRender) as Array<TIngredientType>).map((type: TIngredientType) => (\r\n                  <div\r\n                    key={type}\r\n                    ref={(el) => itemsRefs.current[type] = el}\r\n                  >\r\n                    <h5\r\n                      className={classNames('text text_type_main-medium pt-10 pb-6', burgerIngredientsStyles['tabs-label'], { text_color_inactive: type !== currentTab })}\r\n                    >\r\n                      {tabs[type]}\r\n                    </h5>\r\n                    <div className={burgerIngredientsStyles['grid']}>\r\n                      {renderIngredients(type)}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </CustomScroll>\r\n          )\r\n        }\r\n      </Tabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","export default __webpack_public_path__ + \"static/media/order-completed.39d47e08.svg\";","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport orderDetailsStyles from './order-details.module.css';\r\nimport img from '../../images/order-completed.svg';\r\n\r\ntype TOrderDetailsProps = {\r\n  orderId: string;\r\n  status: string;\r\n};\r\n\r\nconst OrderDetails: React.FC<TOrderDetailsProps> = ({\r\n  orderId,\r\n  status\r\n}) => (\r\n  <>\r\n    <span className={classNames(orderDetailsStyles['id'], 'text text_glowing text_type_digits-large')}>\r\n      {orderId}\r\n    </span>\r\n    <h5 className={classNames(orderDetailsStyles['title'], 'text text_type_main-medium mt-8 mb-15')}>\r\n      идентификатор заказа\r\n    </h5>\r\n    <img className=\"mb-15\" src={img} alt=\"Заказ готовится/готов\" />\r\n    <h6 className={classNames(orderDetailsStyles['status'], 'text text_type_main-default mb-2')}>\r\n      {status}\r\n    </h6>\r\n    <p className={classNames(orderDetailsStyles['description'], 'text text_type_main-default text_color_inactive')}>\r\n      Дождитесь готовности на орбитальной станции\r\n    </p>\r\n  </>\r\n);\r\n\r\nexport default OrderDetails;\r\n","import React from 'react';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport classNames from 'classnames';\r\nimport modalCloseBtnStyles from './modal-close-btn.module.css';\r\n\r\ntype TModalCloseBtnProps = {\r\n  className?: string;\r\n  onClick: (e: React.SyntheticEvent) => void;\r\n};\r\n\r\nconst ModalCloseBtn: React.FC<TModalCloseBtnProps> = ({\r\n  className,\r\n  onClick,\r\n}) => (\r\n  <button\r\n    className={classNames(modalCloseBtnStyles['btn'], className)}\r\n    type=\"button\"\r\n    onClick={onClick}\r\n  >\r\n    <CloseIcon type=\"primary\" />\r\n  </button>\r\n);\r\n\r\nexport default ModalCloseBtn;\r\n","import React from 'react';\r\nimport modalOverlayStyles from './modal-overlay.module.css';\r\n\r\ntype TModalOverlayProps = {\r\n  onRequestClose: (e?: React.SyntheticEvent) => void;\r\n};\r\n\r\nconst ModalOverlay: React.FC<TModalOverlayProps> = ({\r\n  onRequestClose\r\n}) => (\r\n  <div\r\n    data-test=\"modal-overlay\"\r\n    className={modalOverlayStyles['overlay']}\r\n    onClick={onRequestClose}\r\n  />\r\n);\r\n\r\nexport default ModalOverlay;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport modalStyles from './modal.module.css';\r\nimport { KEY_ESC } from '../../constants';\r\nimport ModalCloseBtn from './modal-close-btn/modal-close-btn';\r\nimport ModalOverlay from './modal-overlay/modal-overlay';\r\n\r\nconst BODY_CLASS = 'modal-is-shown';\r\n\r\ntype TModalProps = {\r\n  className?: string;\r\n  onRequestClose: (e?: React.SyntheticEvent) => void;\r\n};\r\n\r\nconst Modal: React.FC<TModalProps> = ({\r\n  className,\r\n  children,\r\n  onRequestClose,\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement>(document.querySelector('#modals'));\r\n\r\n  useEffect(() => {\r\n    document.body.classList.add(BODY_CLASS);\r\n    return () => {\r\n      document.body.classList.remove(BODY_CLASS);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e: KeyboardEvent) => {\r\n      if (e.code === KEY_ESC) {\r\n        e.stopPropagation();\r\n        onRequestClose();\r\n      }\r\n    };\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, [onRequestClose]);\r\n\r\n  return containerRef.current ? ReactDOM.createPortal(\r\n    (\r\n      <div data-test=\"modal\" className={modalStyles['modal']}>\r\n        <ModalOverlay onRequestClose={onRequestClose} />\r\n        <div className={`${modalStyles['content']} ${className}`}>\r\n          <ModalCloseBtn onClick={onRequestClose} />\r\n          {children}\r\n        </div>\r\n      </div>\r\n    ),\r\n    containerRef.current,\r\n  ) : null;\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport classNames from 'classnames';\r\nimport bunDropzoneStyles from './bun-dropzone.module.css';\r\nimport { TIngredient } from '../../../services/api';\r\n\r\ntype TBunDropzoneProps = {\r\n  type?: 'top' | 'bottom';\r\n  bun?: TIngredient | null;\r\n  onDrop: (item: TIngredient) => void;\r\n  className?: string;\r\n};\r\n\r\nconst BunDropzone: React.FC<TBunDropzoneProps> = ({\r\n  type = 'top',\r\n  bun = null,\r\n  onDrop,\r\n  className,\r\n}) => {\r\n  const [{ canDrop }, ref] = useDrop({\r\n    accept: 'bun',\r\n    drop: onDrop,\r\n    collect: (monitor) => ({\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={classNames('pr-4', 'pl-12', bunDropzoneStyles['item'], className)}\r\n      ref={ref}\r\n      data-test=\"bun-dropzone\"\r\n    >\r\n      {bun ? (\r\n        <ConstructorElement\r\n          thumbnail={bun.image}\r\n          price={bun.price}\r\n          text={`${bun.name} ${type === 'top' ? '(верх)' : '(низ)'}`}\r\n          type={type}\r\n          isLocked\r\n        />\r\n      ) : (\r\n        <div className={classNames('text', 'text_type_main-default', bunDropzoneStyles['placeholder'], bunDropzoneStyles[type])}>\r\n          {!canDrop && 'Место для булки'}\r\n        </div>\r\n      )}\r\n      {canDrop && (\r\n        <div className={classNames(bunDropzoneStyles['overlay'], bunDropzoneStyles[type])}>\r\n          <span className={classNames('text', 'text_type_main-medium', bunDropzoneStyles['overlay-title'])}>Перетащите булку</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BunDropzone;\r\n","import React, { useRef } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport classNames from 'classnames';\r\nimport sortableIngredientStyles from './sortable-ingredient.module.css';\r\nimport { TIngredient } from '../../../../services/api';\r\n\r\ntype TSortableIngredientProps = {\r\n  className?: string;\r\n  ingredient: TIngredient;\r\n  index: number;\r\n  onDelete: () => void;\r\n  moveItem: (dragIndex: number, hoverIndex: number) => void;\r\n};\r\n\r\nconst SortableIngredient: React.FC<TSortableIngredientProps> = ({\r\n  className,\r\n  ingredient,\r\n  index,\r\n  onDelete,\r\n  moveItem\r\n}) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const { name, price, image } = ingredient;\r\n\r\n  const [, drag, preview] = useDrag({\r\n    type: 'sortable-ingredient',\r\n    item: { index, id: ingredient.id },\r\n  });\r\n\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: 'sortable-ingredient',\r\n    collect: (monitor) => ({\r\n      handlerId: monitor.getHandlerId(),\r\n    }),\r\n    hover: (item: { id: string | undefined; index: number }, monitor) => {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      // Don't replace items with themselves\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n\r\n      // Determine rectangle on screen\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n\r\n      // Get vertical middle\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n\r\n      // Determine mouse position\r\n      const clientOffset = monitor.getClientOffset();\r\n      if (!clientOffset) {\r\n        return;\r\n      }\r\n\r\n      // Get pixels to the top\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\r\n      // Only perform the move when the mouse has crossed half of the items height\r\n      // When dragging downwards, only move when the cursor is below 50%\r\n      // When dragging upwards, only move when the cursor is above 50%\r\n\r\n      // Dragging downwards\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n\r\n      // Dragging upwards\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n\r\n      // Time to actually perform the action\r\n      moveItem(dragIndex, hoverIndex);\r\n\r\n      // Note: we're mutating the monitor item here!\r\n      // Generally it's better to avoid mutations,\r\n      // but it's good here for the sake of performance\r\n      // to avoid expensive index searches.\r\n      item.index = hoverIndex; // eslint-disable-line\r\n    },\r\n  });\r\n\r\n  drop(preview(ref));\r\n\r\n  return (\r\n    <div\r\n      className={classNames(sortableIngredientStyles['item'], className)}\r\n      ref={ref}\r\n    >\r\n      <div\r\n        className={sortableIngredientStyles['handle']}\r\n        ref={drag}\r\n        data-handler-id={handlerId}\r\n      >\r\n        <DragIcon type=\"primary\" />\r\n      </div>\r\n      <ConstructorElement\r\n        text={name}\r\n        price={price}\r\n        thumbnail={image}\r\n        handleClose={onDelete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortableIngredient;\r\n","import React from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport classNames from 'classnames';\r\nimport ingredientsDropzoneStyles from './ingredients-dropzone.module.css';\r\nimport CustomScroll from '../../custom-scroll/custom-scroll';\r\nimport SortableIngredient from './sortable-ingredient/sortable-ingredient';\r\nimport { TIngredient } from '../../../services/api';\r\n\r\ntype TIngredientsDropzoneProps = {\r\n  items: Array<TIngredient>;\r\n  onDrop: (item: TIngredient) => void;\r\n  onItemDelete: (item: TIngredient, index: number) => void;\r\n  moveItem: (dragIndex: number, hoverIndex: number) => void;\r\n};\r\n\r\nconst IngredientsDropzone: React.FC<TIngredientsDropzoneProps> = ({\r\n  items,\r\n  onDrop,\r\n  onItemDelete,\r\n  moveItem\r\n}) => {\r\n  const [{ canDrop }, ref] = useDrop({\r\n    accept: 'ingredient',\r\n    collect: (monitor) => ({\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n    drop: onDrop,\r\n  });\r\n\r\n  return (\r\n    <div className={classNames(ingredientsDropzoneStyles['wrapper'], 'mt-4', 'mb-4')} ref={ref} data-test=\"ingredient-dropzone\">\r\n      <CustomScroll className={classNames(ingredientsDropzoneStyles['scroll'], 'pl-4')}>\r\n        {(items.length > 0) ? items.map((item, index) => (\r\n          <SortableIngredient\r\n            key={item.id}\r\n            className={classNames({ 'mb-4': index < items.length - 1 })}\r\n            ingredient={item}\r\n            index={index}\r\n            onDelete={() => onItemDelete(item, index)}\r\n            moveItem={moveItem}\r\n          />\r\n        )) : (\r\n          <div className={classNames(ingredientsDropzoneStyles['placeholder'], 'ml-8')}>\r\n            {!canDrop && <span className=\"text text_type_main-default\">Место для ингредиентов</span>}\r\n          </div>\r\n        )}\r\n      </CustomScroll>\r\n      {canDrop && (\r\n        <div className={`${ingredientsDropzoneStyles['overlay']}`}>\r\n          <span className={classNames('text', 'text_type_main-medium', ingredientsDropzoneStyles['overlay-title'])}>Перетащите ингредиенты</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientsDropzone;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport totalPriceStyles from './total-price.module.css';\r\n\r\ntype TTotalPriceProps = {\r\n  amount: string;\r\n  className?: string;\r\n  type?: 'medium' | 'default';\r\n};\r\n\r\nconst TotalPrice: React.FC<TTotalPriceProps> = ({ amount, className, type = 'default' }) => {\r\n  const amountClasses = classNames(\r\n    'text mr-2',\r\n    {\r\n      ['text_type_digits-medium']: type === 'medium',\r\n      ['text_type_digits-default']: type === 'default'\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className={classNames(totalPriceStyles['price'], className)}>\r\n      <span className={amountClasses}>{amount}</span>\r\n      <CurrencyIcon type=\"primary\" />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TotalPrice;\r\n","import React, { SyntheticEvent } from 'react';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport classNames from 'classnames';\r\nimport buttonsStyles from './buttons.module.css';\r\nimport TotalPrice from '../../total-price/total-price';\r\n\r\ntype TButtonsProps = {\r\n  totalPrice: string;\r\n  onSubmit: (() => void) | ((e: SyntheticEvent) => void);\r\n  canOrder: boolean;\r\n  isLoading: boolean;\r\n};\r\n\r\nconst Buttons: React.FC<TButtonsProps> = ({\r\n  totalPrice,\r\n  onSubmit,\r\n  canOrder,\r\n  isLoading,\r\n}) => (\r\n  <div className={classNames(buttonsStyles['buttons'], 'mt-10 pr-4')}>\r\n    <TotalPrice amount={totalPrice} className=\"mr-10\" type=\"medium\" />\r\n    {canOrder && (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        onClick={onSubmit}\r\n        disabled={isLoading}\r\n      >\r\n        Оформить заказ\r\n      </Button>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Buttons;\r\n","import React, { useMemo } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport Modal from '../modal/modal';\r\nimport BunDropzone from './bun-dropzone/bun-dropzone';\r\nimport IngredientsDropzone from './ingredients-dropzone/ingredients-dropzone';\r\nimport { decrement, increment } from '../../services/actions/ingredients';\r\nimport Buttons from './buttons/buttons';\r\nimport { addItem, deleteItem, swapItems } from '../../services/actions/burger-constructor';\r\nimport { submitOrder, clearOrder } from '../../services/actions/order';\r\nimport useAuth from '../../hooks/use-auth';\r\nimport { TIngredient } from '../../services/api';\r\n\r\nconst BurgerConstructor: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useAuth();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const {\r\n    order,\r\n    items,\r\n    bun,\r\n    isLoading,\r\n  } = useSelector((store: any) => ({\r\n    order: store.order.order,\r\n    isLoading: store.order.isLoading,\r\n    items: store.burgerConstructor.items,\r\n    bun: store.burgerConstructor.bun,\r\n  }));\r\n\r\n  const totalPrice = useMemo(() => (\r\n    items\r\n      .reduce((acc: number, item: TIngredient) => acc + item.price, bun ? bun.price * 2 : 0)\r\n  ), [items, bun]);\r\n\r\n  const onItemAdd = (item: TIngredient) => {\r\n    dispatch(addItem(item));\r\n    if (item.type === 'bun' && bun) {\r\n      dispatch(decrement(bun._id));\r\n    }\r\n    dispatch(increment(item._id));\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (!user) {\r\n      history.push({ pathname: '/login', state: { from: location } });\r\n      return;\r\n    }\r\n\r\n    dispatch(submitOrder());\r\n  };\r\n\r\n  const onRequestClose = () => dispatch(clearOrder());\r\n\r\n  const onDelete = (item: TIngredient, idx: number) => {\r\n    if (window.confirm('Действительно хотите удалить?')) {\r\n      dispatch(deleteItem(idx));\r\n      dispatch(decrement(item._id));\r\n    }\r\n  };\r\n\r\n  const moveItem = (dragIndex: number, hoverIndex: number) => dispatch(swapItems(dragIndex, hoverIndex));\r\n  const canOrder = items.length > 0 && !!bun;\r\n\r\n  return (\r\n    <div className=\"pt-25\">\r\n      <BunDropzone\r\n        type=\"top\"\r\n        bun={bun}\r\n        onDrop={onItemAdd}\r\n      />\r\n      <IngredientsDropzone\r\n        items={items}\r\n        onDrop={onItemAdd}\r\n        onItemDelete={onDelete}\r\n        moveItem={moveItem}\r\n      />\r\n      <BunDropzone\r\n        type=\"bottom\"\r\n        bun={bun}\r\n        onDrop={onItemAdd}\r\n      />\r\n      <Buttons\r\n        totalPrice={totalPrice}\r\n        isLoading={isLoading}\r\n        onSubmit={onSubmit}\r\n        canOrder={canOrder}\r\n      />\r\n      {order && order.id && (\r\n        <Modal\r\n          className=\"pt-30 pr-25 pb-30 pl-25\"\r\n          onRequestClose={onRequestClose}\r\n        >\r\n          <OrderDetails\r\n            orderId={order.id}\r\n            status=\"Ваш заказ начали готовить\"\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import { TIngredient } from '../api';\r\nimport {\r\n  CONSTRUCTOR_RESET,\r\n  CONSTRUCTOR_ADD_ITEM,\r\n  CONSTRUCTOR_DELETE_ITEM,\r\n  CONSTRUCTOR_SWAP_ITEMS,\r\n  TConstructorSwapItemsAction,\r\n  TConstructorAddItemAction,\r\n  TConstructorDeleteItem,\r\n  TConstructorResetAction\r\n} from '../action-types/burger-constructor';\r\n\r\nexport const swapItems = (dragIndex: number, hoverIndex: number): TConstructorSwapItemsAction => ({\r\n  type: CONSTRUCTOR_SWAP_ITEMS,\r\n  payload: { dragIndex, hoverIndex }\r\n});\r\n\r\nexport const addItem = (item: TIngredient): TConstructorAddItemAction => ({\r\n  type: CONSTRUCTOR_ADD_ITEM,\r\n  payload: item\r\n});\r\n\r\nexport const deleteItem = (idx: number): TConstructorDeleteItem => ({\r\n  type: CONSTRUCTOR_DELETE_ITEM,\r\n  payload: idx,\r\n});\r\n\r\nexport const reset = (): TConstructorResetAction => ({\r\n  type: CONSTRUCTOR_RESET\r\n});\r\n","import api from '../api';\r\nimport { AppThunk } from '../store';\r\nimport { reset } from './burger-constructor';\r\nimport { clearCount } from './ingredients';\r\nimport { setLastError } from './common';\r\nimport {\r\n  SUBMIT_ORDER_ERROR,\r\n  SUBMIT_ORDER_FULFILLED,\r\n  SUBMIT_ORDER_PENDING,\r\n  CLEAR_ORDER,\r\n  TOrder,\r\n  TSubmitOrderClearAction,\r\n  TSubmitOrderErrorAction,\r\n  TSubmitOrderFulfilledAction,\r\n  TSubmitOrderPendingAction\r\n} from '../action-types/order'\r\n\r\nexport const setOrder = (order: TOrder): TSubmitOrderFulfilledAction => ({\r\n  type: SUBMIT_ORDER_FULFILLED,\r\n  payload: order\r\n});\r\n\r\nexport const setError = (): TSubmitOrderErrorAction => ({\r\n  type: SUBMIT_ORDER_ERROR,\r\n});\r\n\r\nexport const setLoading = (): TSubmitOrderPendingAction => ({\r\n  type: SUBMIT_ORDER_PENDING\r\n});\r\n\r\nexport const clearOrder = (): TSubmitOrderClearAction => ({\r\n  type: CLEAR_ORDER\r\n});\r\n\r\nexport const submitOrder: AppThunk = () => async (dispatch, getState) => {\r\n  const { burgerConstructor: { bun, items }, order: { isLoading } } = getState();\r\n  if (isLoading || !bun) {\r\n    return;\r\n  }\r\n\r\n  const { user } = getState().auth;\r\n  if (!user) {\r\n    return;\r\n  }\r\n\r\n  dispatch(setLoading());\r\n\r\n  const ingredients = [...items.map((item) => item._id), bun._id, bun._id];\r\n  try {\r\n    const result = await api.order.create(ingredients);\r\n    dispatch(setOrder({ name: result.name, id: result.order.number }));\r\n    dispatch(reset());\r\n    dispatch(clearCount());\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport layoutStyles from './col.module.css';\r\n\r\ntype TColProps = {\r\n  className?: string;\r\n  mod?: string | null;\r\n  align?: 'left' | 'right' | 'center';\r\n};\r\n\r\nconst Col: React.FC<TColProps> = ({\r\n  className,\r\n  mod = null,\r\n  children,\r\n  align\r\n}) => {\r\n  const classes = classNames(\r\n    layoutStyles[`col${mod ? `-${mod}` : ''}`],\r\n    { ...(align && { [layoutStyles[align]]: align }) },\r\n    className\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={classes}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Col;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport rowStyles from './row.module.css';\r\n\r\ntype TRowProps = {\r\n  className?: string;\r\n};\r\n\r\n// TODO: implement grid system\r\nconst Row: React.FC<TRowProps> = ({\r\n  className,\r\n  children\r\n}) => (\r\n  <div\r\n    className={classNames(rowStyles['row'], className)}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport containerStyles from './container.module.css';\r\n\r\ntype TContainerProps = {\r\n  className?: string;\r\n};\r\n\r\nconst Container: React.FC<TContainerProps> = ({\r\n  className,\r\n  children\r\n}) => (\r\n  <div\r\n    className={classNames(containerStyles['container'], className)}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import { createContext, useContext } from 'react';\r\nimport { TMenuProps } from './menu';\r\n\r\nconst MenuContext = createContext<TMenuProps>({});\r\n\r\nexport const MenuProvider = MenuContext.Provider;\r\n\r\nexport const useMenu = () => useContext(MenuContext);\r\n","import React, { useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport menuStyles from './menu.module.css';\r\nimport { MenuProvider } from './use-menu';\r\n\r\nexport type TMenuProps = {\r\n  size?: 'big' | 'default';\r\n  direction?: 'row' | 'column';\r\n};\r\n\r\nconst Menu: React.FC<TMenuProps & {\r\n  className?: string;\r\n}> = ({\r\n  className,\r\n  children,\r\n  direction = 'row',\r\n  size = 'default'\r\n}) => {\r\n    const classes = classNames(\r\n      { ...(direction && { [menuStyles[direction]]: direction }) },\r\n      menuStyles['menu'],\r\n      className\r\n    );\r\n\r\n    const context = useMemo(() => ({ direction, size }), [direction, size]);\r\n\r\n    return (\r\n      <MenuProvider value={context}>\r\n        <nav className={classes}>\r\n          {children}\r\n        </nav>\r\n      </MenuProvider>\r\n    );\r\n  };\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport menuItemStyles from './menu-item.module.css';\r\nimport { useMenu } from '../use-menu';\r\n\r\ntype TMenuItemProps = {\r\n  className?: string;\r\n  to: string;\r\n  startIcon?: React.ReactNode;\r\n  label: string;\r\n};\r\n\r\nconst MenuItem: React.FC<TMenuItemProps> = ({\r\n  className,\r\n  to,\r\n  startIcon,\r\n  label\r\n}) => {\r\n  const match = useRouteMatch({\r\n    path: to,\r\n    exact: true\r\n  });\r\n\r\n  const { direction, size } = useMenu();\r\n\r\n  const classes = classNames(\r\n    'pr-5 pt-4 pb-4 text',\r\n    size === 'big' ? 'text_type_main-medium' : 'text_type_main-default',\r\n    menuItemStyles['menu-item'],\r\n    {\r\n      [menuItemStyles['active']]: match,\r\n      'pl-5': direction === 'row',\r\n      'pr-5': direction === 'row'\r\n    },\r\n    className\r\n  );\r\n\r\n  return (\r\n    <Link\r\n      className={classes}\r\n      to={to}\r\n    >\r\n      {\r\n        startIcon && (\r\n          <div className={menuItemStyles['icon']}>\r\n            {startIcon}\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        label\r\n      }\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import React from 'react';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport noticeStyles from './notice.module.css';\r\n\r\ntype TNoticeProps = {\r\n  text: string;\r\n  onClose?: (e: React.SyntheticEvent) => void;\r\n};\r\n\r\nconst Notice: React.FC<TNoticeProps> = ({\r\n  text,\r\n  onClose\r\n}) => (\r\n  <div className={noticeStyles['notice']}>\r\n    <span className=\"text text_type_main-default\">{text}</span>\r\n    <button\r\n      className={noticeStyles['close']}\r\n      onClick={onClose}\r\n      type=\"button\"\r\n    >\r\n      <CloseIcon type=\"primary\" />\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Notice;\r\n","import { useDispatch, useSelector } from '../services/store';\r\n\r\nimport { setLastError } from '../services/actions/common';\r\n\r\nconst useError = () => {\r\n  const error = useSelector(\r\n    (store) => {\r\n      const err = store.common.lastErr\r\n\r\n      return typeof err === 'object'\r\n        ? (err.response ? err.response.message : err.message)\r\n        : err;\r\n    }\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearError = () => {\r\n    dispatch(setLastError(undefined));\r\n  };\r\n\r\n  return {\r\n    error,\r\n    clearError\r\n  };\r\n};\r\n\r\nexport default useError;\r\n","import React from 'react';\r\nimport {\r\n  BurgerIcon,\r\n  ListIcon,\r\n  Logo,\r\n  ProfileIcon,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport classNames from 'classnames';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from '../grid/container/container';\r\nimport Menu from '../menu/menu';\r\nimport MenuItem from '../menu/menu-item/menu-item';\r\nimport Notice from '../notice/notice';\r\nimport appHeaderStyles from './app-header.module.css';\r\nimport useError from '../../hooks/use-error';\r\n\r\nconst AppHeader: React.FC = () => {\r\n  const { error, clearError } = useError();\r\n\r\n  return (\r\n    <header className={classNames(appHeaderStyles['header'], 'pb-4 pt-4')}>\r\n      <Container className={appHeaderStyles['container']}>\r\n        <Menu>\r\n          <MenuItem\r\n            startIcon={<BurgerIcon type=\"primary\" />}\r\n            className=\"mr-2 pl-0\"\r\n            label=\"Конструктор\"\r\n            to=\"/\"\r\n          />\r\n          <MenuItem\r\n            startIcon={<ListIcon type=\"primary\" />}\r\n            label=\"Лента заказов\"\r\n            to=\"/feed\"\r\n          />\r\n        </Menu>\r\n        <Link to=\"/\">\r\n          <Logo />\r\n        </Link>\r\n        <Menu>\r\n          <MenuItem\r\n            startIcon={<ProfileIcon type=\"primary\" />}\r\n            className=\"ml-auto pr-0\"\r\n            label=\"Личный кабинет\"\r\n            to=\"/profile\"\r\n          />\r\n        </Menu>\r\n      </Container>\r\n      {error && <Notice onClose={clearError} text={error} />}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport Container from '../grid/container/container';\r\n\r\ntype TMainProps = {\r\n  className?: string;\r\n};\r\n\r\nconst Main: React.FC<TMainProps> = ({\r\n  className,\r\n  children\r\n}) => (\r\n  <main\r\n    className={className}\r\n  >\r\n    <Container>\r\n      {children}\r\n    </Container>\r\n  </main>\r\n);\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport AppHeader from '../../app-header/app-header';\r\nimport Main from '../../main/main';\r\n\r\nconst Base: React.FC = ({ children }) => (\r\n  <>\r\n    <AppHeader />\r\n    <Main>\r\n      {children}\r\n    </Main>\r\n  </>\r\n);\r\n\r\n\r\nexport default Base;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\r\nimport BurgerConstructor from '../../components/burger-constructor/burger-constructor';\r\nimport Col from '../../components/grid/col/col';\r\nimport Row from '../../components/grid/row/row';\r\nimport Base from '../../components/layout/base/base';\r\nimport WithLoader from '../../components/with-loader/with-loader';\r\n\r\nconst Home: React.FC = () => {\r\n  const isLoading = useSelector((store: any) => store.order.isLoading);\r\n\r\n  return (\r\n    <WithLoader isLoading={isLoading}>\r\n      <Base>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <Row>\r\n            <Col mod=\"6\">\r\n              <BurgerIngredients />\r\n            </Col>\r\n            <Col mod=\"6\">\r\n              <BurgerConstructor />\r\n            </Col>\r\n          </Row>\r\n        </DndProvider>\r\n      </Base>\r\n    </WithLoader>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport registerFormStyles from './register-form.module.css';\r\n\r\ntype TRegisterFormProps = {\r\n  className?: string;\r\n  onSubmit: (e: React.FormEvent) => void;\r\n  header?: React.ReactNode;\r\n  body: React.ReactNode;\r\n  footer?: React.ReactNode;\r\n};\r\n\r\nconst RegisterForm: React.FC<TRegisterFormProps> = ({\r\n  className,\r\n  onSubmit,\r\n  header,\r\n  body,\r\n  footer\r\n}) => {\r\n  const classes = classNames(registerFormStyles['form'], 'mt-30', className);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className={classes}>\r\n      {\r\n        header && (\r\n          <div className={registerFormStyles['header']}>\r\n            {header}\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        body && (\r\n          <div className={registerFormStyles['body']}>\r\n            {body}\r\n          </div>\r\n        )\r\n      }\r\n      {\r\n        footer && (\r\n          <div className={registerFormStyles['footer']}>\r\n            {footer}\r\n          </div>\r\n        )\r\n      }\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState, forwardRef } from 'react';\r\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ntype TInputPasswordProps = {\r\n  placeholder: string;\r\n  value: string;\r\n  error?: boolean;\r\n  errorText?: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst InputPassword = forwardRef<HTMLInputElement, TInputPasswordProps>\r\n  (({ placeholder, error = false, errorText, value, onChange, ...rest }, ref) => {\r\n    const [isHidden, setIsHidden] = useState(true);\r\n    return (\r\n      <Input\r\n        ref={ref}\r\n        type={isHidden ? 'password' : 'text'}\r\n        icon={isHidden ? 'ShowIcon' : 'HideIcon'}\r\n        onIconClick={() => setIsHidden(!isHidden)}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        error={error}\r\n        errorText={errorText}\r\n        onChange={onChange}\r\n        {...rest}\r\n      />\r\n    );\r\n  });\r\n\r\nexport default InputPassword;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport isEqual from 'lodash.isequal';\r\n\r\nconst validateRequired = (value: any) => !!value;\r\n\r\nconst validateEmail = (email: string) => email\r\n  .toLowerCase()\r\n  .match(\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  );\r\n\r\nexport type TValidatorOptions = { msg: string };\r\n\r\nexport type TSchema = {\r\n  required?: TValidatorOptions | boolean;\r\n  email?: TValidatorOptions | boolean;\r\n}\r\n\r\nexport type TSchemas<T> = {\r\n  [name in keyof T]: TSchema;\r\n};\r\n\r\nexport type TTouched<T> = {\r\n  [name in keyof T]?: boolean;\r\n};\r\n\r\nexport type TError<T> = {\r\n  [name in keyof T]?: string;\r\n};\r\n\r\nexport type TFields = {\r\n  [name: string]: string;\r\n};\r\n\r\nconst useForm = ({ initialValues }: { initialValues: TFields }) => {\r\n  const [fields, setFields] = useState<TFields>({ ...initialValues });\r\n  const [schemas, setSchemas] = useState<TSchemas<TFields>>({});\r\n  const [touched, setTouched] = useState<TTouched<TFields>>({});\r\n  const [errors, setErrors] = useState<TError<TFields>>({});\r\n  const [isDirty, setIsDirty] = useState(false);\r\n\r\n  const validateForm = useCallback((validateTouched = true) => {\r\n    const errs: TError<TFields> = {};\r\n\r\n    (Object.keys(schemas) as Array<keyof TFields>).forEach((key) => {\r\n      const isTouched = touched[key];\r\n      if (validateTouched && !isTouched) {\r\n        return;\r\n      }\r\n      const value = fields[key];\r\n      const schema = schemas[key];\r\n      if (!schema) {\r\n        return;\r\n      }\r\n      if (typeof schema.required !== 'undefined') {\r\n        const result = validateRequired(value);\r\n        if (!result) {\r\n          errs[key] = typeof schema.required === 'boolean' ? 'Требуемое поле' : schema.required.msg;\r\n          return;\r\n        }\r\n      }\r\n      if (typeof schema.email !== 'undefined') {\r\n        const result = validateEmail(value);\r\n        if (!result) {\r\n          errs[key] = typeof schema.email === 'boolean' ? 'Введите корректный e-mail' : schema.email.msg;\r\n        }\r\n      }\r\n    });\r\n\r\n    return errs;\r\n  }, [schemas, touched, fields]);\r\n\r\n  useEffect(() => {\r\n    const validatonResult = validateForm();\r\n    setErrors(validatonResult);\r\n  }, [fields, touched, validateForm]);\r\n\r\n  useEffect(() => {\r\n    setIsDirty(!isEqual(initialValues, fields));\r\n  }, [fields, initialValues]);\r\n\r\n  const register = (name: keyof TFields, schema?: TSchema) => {\r\n    if (schema && !schemas[name]) {\r\n      setSchemas({ ...schemas, [name]: schema });\r\n    }\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setFields({ ...fields, [name]: e.target.value });\r\n    };\r\n\r\n    const onBlur = () => {\r\n      if (!touched[name]) {\r\n        setTouched({ ...touched, [name]: true });\r\n      }\r\n    };\r\n\r\n    return {\r\n      name: name as string,\r\n      onChange,\r\n      onBlur,\r\n      value: fields[name]\r\n    };\r\n  };\r\n\r\n  const handleSubmit = (onSubmit: (values: TFields) => void) => (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setTouched(Object.keys(fields).reduce((acc, key) => ({ ...acc, [key]: true }), {}));\r\n\r\n    const validatonResult = validateForm(false);\r\n    if (Object.keys(validatonResult).length) {\r\n      return;\r\n    }\r\n\r\n    onSubmit(fields);\r\n  };\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    fields,\r\n    setFields,\r\n    isDirty\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import React from 'react';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport RegisterForm from '../../components/register-form/register-from';\r\nimport Base from '../../components/layout/base/base';\r\nimport InputPassword from '../../components/input-password/input-password';\r\nimport useForm, { TFields } from '../../hooks/use-form';\r\nimport useAuth from '../../hooks/use-auth';\r\n\r\nconst Register: React.FC = () => {\r\n  const auth = useAuth();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors\r\n  } = useForm({\r\n    initialValues: {\r\n      name: '',\r\n      password: '',\r\n      email: ''\r\n    }\r\n  });\r\n\r\n  const onSubmit = ({ email, password, name }: TFields) => auth.register(email, password, name);\r\n\r\n  if (auth.user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Base>\r\n      <RegisterForm\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        header={(\r\n          <h5 className=\"text text_type_main-medium mb-6\">\r\n            Регистрация\r\n          </h5>\r\n        )}\r\n        body={(\r\n          <>\r\n            <div className=\"mb-6\">\r\n              <Input\r\n                {...register('name', { required: true })}\r\n                placeholder=\"Имя\"\r\n                error={!!errors.name}\r\n                errorText={errors.name}\r\n              />\r\n            </div>\r\n            <div className=\"mb-6\">\r\n              <Input\r\n                {...register('email', { required: true, email: true })}\r\n                placeholder=\"E-mail\"\r\n                error={!!errors.email}\r\n                errorText={errors.email}\r\n              />\r\n            </div>\r\n            <div className=\"mb-6\">\r\n              <InputPassword\r\n                {...register('password', { required: true })}\r\n                placeholder=\"Введите новый пароль\"\r\n                error={!!errors.password}\r\n                errorText={errors.password}\r\n              />\r\n            </div>\r\n            <Button size=\"large\">Зарегистрироваться</Button>\r\n          </>\r\n        )}\r\n        footer={(\r\n          <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n            Уже зарегистрированы?&nbsp;\r\n            <Link className=\"link\" to=\"/login\">Войти</Link>\r\n          </p>\r\n        )}\r\n      />\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport Base from '../../components/layout/base/base';\r\nimport Row from '../../components/grid/row/row';\r\nimport Col from '../../components/grid/col/col';\r\nimport RegisterForm from '../../components/register-form/register-from';\r\nimport InputPassword from '../../components/input-password/input-password';\r\nimport useForm, { TFields } from '../../hooks/use-form';\r\nimport useAuth from '../../hooks/use-auth';\r\nimport { TState } from '../../types/history';\r\n\r\nconst Login = () => {\r\n  const { login, user } = useAuth();\r\n  const location = useLocation<TState>();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors\r\n  } = useForm({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  });\r\n\r\n  const onSubmit = ({ email, password }: TFields) => login(email, password);\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: location.state?.from?.pathname || '/',\r\n          ...(location.state && { state: location.state.from?.state })\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Base>\r\n      <Row>\r\n        <Col mod=\"auto\" align=\"center\">\r\n          <RegisterForm\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            header={(\r\n              <h5 className=\"text text_type_main-medium mb-6\">\r\n                Вход\r\n              </h5>\r\n            )}\r\n            body={(\r\n              <>\r\n                <div className=\"mb-6\">\r\n                  <Input\r\n                    placeholder=\"E-mail\"\r\n                    error={!!errors.email}\r\n                    errorText={errors.email}\r\n                    {...register('email', { required: true, email: true })}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                  <InputPassword\r\n                    placeholder=\"Пароль\"\r\n                    error={!!errors.password}\r\n                    errorText={errors.password}\r\n                    {...register('password', { required: true })}\r\n                  />\r\n                </div>\r\n                <Button size=\"large\" htmlType=\"submit\">\r\n                  Войти\r\n                </Button>\r\n              </>\r\n            )}\r\n            footer={(\r\n              <>\r\n                <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n                  Вы — новый пользователь?&nbsp;\r\n                  <Link className=\"link\" to=\"/register\">Зарегистрироваться</Link>\r\n                </p>\r\n                <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n                  Забыли пароль?&nbsp;\r\n                  <Link className=\"link\" to=\"/forgot-password\">Восстановить пароль</Link>\r\n                </p>\r\n              </>\r\n            )}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import api from '../api';\r\nimport { AppThunk } from '../store';\r\nimport { setLastError } from './common';\r\nimport {\r\n  TForgotPasswordFulfilledAction,\r\n  TForgotPasswordErrorAction,\r\n  TForgotPasswordPendingAction,\r\n  FORGOT_PASSWORD_FULFILLED,\r\n  FORGOT_PASSWORD_PENDING,\r\n  FORGOT_PASSWORD_ERROR\r\n} from '../action-types/forgot-password';\r\n\r\nexport const setStep = (): TForgotPasswordFulfilledAction => ({\r\n  type: FORGOT_PASSWORD_FULFILLED\r\n});\r\n\r\nexport const setLoading = (): TForgotPasswordPendingAction => ({\r\n  type: FORGOT_PASSWORD_PENDING\r\n});\r\n\r\nexport const setError = (): TForgotPasswordErrorAction => ({\r\n  type: FORGOT_PASSWORD_ERROR\r\n});\r\n\r\nexport const getCode: AppThunk = (email) => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    await api.password.getCode(email);\r\n    dispatch(setStep());\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n};\r\n\r\nexport const reset: AppThunk = (password, token) => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    await api.password.reset(password, token);\r\n    dispatch(setStep());\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getCode as getCodeAction, reset as resetAction } from '../services/actions/forgot-password';\r\n\r\nconst useForgotPassword = () => {\r\n  const { isLoading, error, step } = useSelector((store: any) => ({\r\n    isLoading: store.forgotPassword.isLoading,\r\n    error: store.forgotPassword.error,\r\n    step: store.forgotPassword.step\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n  const getCode = (email: string) => dispatch(getCodeAction(email));\r\n  const reset = (password: string, token: string) => dispatch(resetAction(password, token));\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    step,\r\n    getCode,\r\n    reset\r\n  };\r\n};\r\n\r\nexport default useForgotPassword;\r\n","import React from 'react';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport RegisterForm from '../../components/register-form/register-from';\r\nimport Base from '../../components/layout/base/base';\r\nimport Row from '../../components/grid/row/row';\r\nimport Col from '../../components/grid/col/col';\r\nimport InputPassword from '../../components/input-password/input-password';\r\nimport useForgotPassword from '../../hooks/use-forgot-password';\r\nimport useForm, { TFields } from '../../hooks/use-form';\r\nimport useAuth from '../../hooks/use-auth';\r\nimport WithLoader from '../../components/with-loader/with-loader';\r\nimport { Step } from '../../services/action-types/forgot-password';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n  const { step, reset, isLoading } = useForgotPassword();\r\n  const { user } = useAuth();\r\n  const { errors, handleSubmit, register } = useForm({\r\n    initialValues: {\r\n      token: '',\r\n      password: '',\r\n    }\r\n  });\r\n\r\n  const onSubmit = ({ password, token }: TFields) => reset(password, token);\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (step === Step.CODE) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WithLoader isLoading={isLoading}>\r\n      <Base>\r\n        <Row>\r\n          <Col mod=\"auto\" align=\"center\">\r\n            <RegisterForm\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              header={(\r\n                <h5 className=\"text text_type_main-medium mb-6\">\r\n                  Восстановление пароля\r\n                </h5>\r\n              )}\r\n              body={(\r\n                <>\r\n                  <div className=\"mb-6\">\r\n                    <InputPassword\r\n                      placeholder=\"Введите новый пароль\"\r\n                      error={!!errors.password}\r\n                      errorText={errors.password}\r\n                      {...register('password')}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-6\">\r\n                    <Input\r\n                      placeholder=\"Введите код из письма\"\r\n                      error={!!errors.token}\r\n                      errorText={errors.token}\r\n                      {...register('token')}\r\n                    />\r\n                  </div>\r\n                  <Button size=\"large\">Сохранить</Button>\r\n                </>\r\n              )}\r\n              footer={(\r\n                <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n                  Вспомнили пароль?&nbsp;\r\n                  <Link className=\"link\" to=\"/login\">Войти</Link>\r\n                </p>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Base>\r\n    </WithLoader>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React from 'react';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport RegisterForm from '../../components/register-form/register-from';\r\nimport Base from '../../components/layout/base/base';\r\nimport useForm, { TFields } from '../../hooks/use-form';\r\nimport useAuth from '../../hooks/use-auth';\r\nimport useForgotPassword from '../../hooks/use-forgot-password';\r\nimport WithLoader from '../../components/with-loader/with-loader';\r\nimport { Step } from '../../services/action-types/forgot-password';\r\n\r\nconst ForgotPassword: React.FC = () => {\r\n  const { register, errors, handleSubmit } = useForm({\r\n    initialValues: {\r\n      email: '',\r\n    }\r\n  });\r\n\r\n  const { getCode, step, isLoading } = useForgotPassword();\r\n  const { user } = useAuth();\r\n\r\n  const onSubmit = ({ email }: TFields) => getCode(email);\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (step === Step.RESET) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/reset-password'\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WithLoader isLoading={isLoading}>\r\n      <Base>\r\n        <RegisterForm\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          header={(\r\n            <h5 className=\"text text_type_main-medium mb-6\">\r\n              Восстановление пароля\r\n            </h5>\r\n          )}\r\n          body={(\r\n            <>\r\n              <div className=\"mb-6\">\r\n                <Input\r\n                  placeholder=\"Укажите e-mail\"\r\n                  {...register('email', { required: true, email: true })}\r\n                  error={!!errors.email}\r\n                  errorText={errors.email}\r\n                />\r\n              </div>\r\n              <Button size=\"large\">Восстановить</Button>\r\n            </>\r\n          )}\r\n          footer={(\r\n            <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n              Вспомнили пароль?&nbsp;\r\n              <Link className=\"link\" to=\"/login\">Войти</Link>\r\n            </p>\r\n          )}\r\n        />\r\n      </Base>\r\n    </WithLoader>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ntype TInputEditableProps = {\r\n  type?: 'text' | 'email' | 'password';\r\n  placeholder: string;\r\n  onBlur: (e?: React.FocusEvent<HTMLInputElement>) => void;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onDelete: () => void;\r\n  value: string;\r\n  error?: boolean;\r\n  errorText?: string;\r\n};\r\n\r\nconst InputEditable: React.FC<TInputEditableProps> = ({\r\n  type = 'text',\r\n  placeholder,\r\n  onBlur,\r\n  onDelete,\r\n  value,\r\n  onChange,\r\n  error,\r\n  errorText,\r\n  ...rest\r\n}) => {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const onIconClick = () => {\r\n    // Не срабаотывает onClick, потому что срабатывает blur\r\n    // если input в фокусе и кликнут элемент за переделами input\r\n    if (isEditable && onDelete) {\r\n      onDelete();\r\n      return;\r\n    }\r\n\r\n    setIsEditable(!isEditable);\r\n  };\r\n\r\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    setIsEditable(false);\r\n    if (onBlur) {\r\n      onBlur(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEditable && ref.current) {\r\n      ref.current.focus();\r\n    }\r\n  }, [isEditable]);\r\n\r\n  return (\r\n    <Input\r\n      ref={ref}\r\n      onBlur={handleBlur}\r\n      placeholder={placeholder}\r\n      type={type}\r\n      disabled={!isEditable}\r\n      icon={!isEditable ? 'EditIcon' : 'CloseIcon'}\r\n      onIconClick={onIconClick}\r\n      onChange={onChange}\r\n      value={value}\r\n      error={error}\r\n      errorText={errorText}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputEditable;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Base from '../base/base';\r\nimport MenuItem from '../../menu/menu-item/menu-item';\r\nimport Menu from '../../menu/menu';\r\nimport Row from '../../grid/row/row';\r\nimport Col from '../../grid/col/col';\r\nimport profileStyles from './profile.module.css';\r\n\r\ntype TProfileProps = {\r\n  description: string;\r\n  content: React.ReactNode;\r\n};\r\n\r\nconst Profile: React.FC<TProfileProps> = ({ description, content }) => {\r\n  const descriptionClasses = classNames('mt-20 text text_type_main-default text_color_inactive', profileStyles['description']);\r\n  return (\r\n    <Base>\r\n      <Row>\r\n        <Col mod=\"4\">\r\n          <Menu direction=\"column\" size=\"big\" className=\"mt-30\">\r\n            <MenuItem to=\"/profile\" label=\"Профиль\" />\r\n            <MenuItem to=\"/profile/orders\" label=\"История заказа\" />\r\n            <MenuItem to=\"/logout\" label=\"Выход\" />\r\n          </Menu>\r\n          <p className={descriptionClasses}>\r\n            {description}\r\n          </p>\r\n        </Col>\r\n        <Col>\r\n          {content}\r\n        </Col>\r\n      </Row>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport RegisterForm from '../../components/register-form/register-from';\r\nimport InputEditable from '../../components/input-editable/input-editable';\r\nimport profileStyles from './profile.module.css';\r\nimport useAuth from '../../hooks/use-auth';\r\nimport useForm, { TFields } from '../../hooks/use-form';\r\nimport ProfileLayout from '../../components/layout/profile/profile';\r\nimport Row from '../../components/grid/row/row';\r\nimport Col from '../../components/grid/col/col';\r\n\r\nconst Profile = () => {\r\n  const { user, update } = useAuth();\r\n\r\n  const initialValues = {\r\n    name: user.name,\r\n    email: user.email,\r\n    password: ''\r\n  };\r\n\r\n  const {\r\n    register,\r\n    errors,\r\n    handleSubmit,\r\n    setFields,\r\n    fields,\r\n    isDirty\r\n  } = useForm({\r\n    initialValues\r\n  });\r\n\r\n  const onSubmit = (data: TFields) => update(data);\r\n\r\n  const clear = () => setFields(initialValues);\r\n\r\n  const clearField = (name: string) => () => setFields({ ...fields, [name]: '' });\r\n\r\n  return (\r\n    <ProfileLayout\r\n      description=\"В этом разделе вы можете изменить свои персональные данные\"\r\n      content={(\r\n        <Row>\r\n          <Col>\r\n            <RegisterForm\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              body={(\r\n                <>\r\n                  <div className=\"mb-6\">\r\n                    <InputEditable\r\n                      placeholder=\"Имя\"\r\n                      {...register('name', { required: true })}\r\n                      onDelete={clearField('name')}\r\n                      error={!!errors.name}\r\n                      errorText={errors.name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-6\">\r\n                    <InputEditable\r\n                      placeholder=\"Логин\"\r\n                      {...register('email', { required: true, email: true })}\r\n                      onDelete={clearField('email')}\r\n                      error={!!errors.email}\r\n                      errorText={errors.email}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-6\">\r\n                    <InputEditable\r\n                      type=\"password\"\r\n                      onDelete={clearField('password')}\r\n                      placeholder=\"Пароль\"\r\n                      {...register('password')}\r\n                    />\r\n                  </div>\r\n                  {isDirty && (\r\n                    <div className={profileStyles['buttons']}>\r\n                      <Button type=\"secondary\" size=\"large\" htmlType=\"button\" onClick={clear}>\r\n                        Отмена\r\n                      </Button>\r\n                      <Button size=\"large\" htmlType=\"submit\">\r\n                        Сохранить\r\n                      </Button>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            />\r\n          </Col>\r\n          <Col />\r\n        </Row>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { historyWsClose, historyWsInit } from '../services/actions/history';\r\nimport { useSelector, useDispatch } from '../services/store';\r\n\r\nconst useOrderHistory = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useSelector((store) => store.history)\r\n  const init = () => dispatch(historyWsInit());\r\n  const close = () => dispatch(historyWsClose());\r\n\r\n  return {\r\n    ...history,\r\n    init,\r\n    close\r\n  };\r\n};\r\n\r\nexport default useOrderHistory;\r\n","import { TOrdersMessage } from '../api';\r\nimport {\r\n  HISTORY_WS_INIT,\r\n  HISTORY_WS_CLOSE,\r\n  HISTORY_WS_CLOSED,\r\n  HISTORY_WS_ERROR,\r\n  HISTORY_WS_MESSAGE,\r\n  HISTORY_WS_SUCCESS,\r\n  THistoryWsClose,\r\n  THistoryWsClosed,\r\n  THistoryWsError,\r\n  THistoryWsInit,\r\n  THistoryWsMessage,\r\n  THistoryWsSucess\r\n} from '../action-types/history';\r\n\r\nexport const historyWsInit = (): THistoryWsInit => ({\r\n  type: HISTORY_WS_INIT,\r\n});\r\n\r\nexport const historyWsSuccess = (): THistoryWsSucess => ({\r\n  type: HISTORY_WS_SUCCESS\r\n});\r\n\r\nexport const historyWsError = (): THistoryWsError => ({\r\n  type: HISTORY_WS_ERROR\r\n});\r\n\r\nexport const historyWsClosed = (): THistoryWsClosed => ({\r\n  type: HISTORY_WS_CLOSED\r\n});\r\n\r\nexport const historyWsClose = (): THistoryWsClose => ({\r\n  type: HISTORY_WS_CLOSE\r\n});\r\n\r\nexport const historyWsMessage = (payload: TOrdersMessage): THistoryWsMessage => ({\r\n  type: HISTORY_WS_MESSAGE,\r\n  payload\r\n});\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport ingredientPreviewStyles from './ingredient-preview.module.css';\r\n\r\ntype TIngredientPreviewProps = {\r\n  name: string;\r\n  image: string;\r\n  style?: object;\r\n  className?: string;\r\n};\r\n\r\nconst IngredientPreview: React.FC<TIngredientPreviewProps> = ({\r\n  name,\r\n  image,\r\n  style,\r\n  className,\r\n  children\r\n}) => {\r\n  const classes = classNames(ingredientPreviewStyles['image-gradient'], className);\r\n  \r\n  return (\r\n    <div\r\n      className={classes}\r\n      style={style}\r\n    >\r\n      <div className={ingredientPreviewStyles['image-wrapper']} >\r\n        <img\r\n          src={image}\r\n          className={ingredientPreviewStyles['image']}\r\n          alt={name}\r\n        />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientPreview;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TOrderStatus } from '../../services/api'\r\n\r\ntype TStatusProps = {\r\n  status: TOrderStatus;\r\n  className?: string;\r\n};\r\n\r\nconst Status: React.FC<TStatusProps> = ({\r\n  status,\r\n  className\r\n}) => {\r\n  const classes = classNames('text text_type_main-default', className);\r\n\r\n  return (\r\n    <div className={classes}>\r\n      {\r\n        status === 'done'\r\n          ? (\r\n            <span className='text_color_success'>\r\n              Выполнен\r\n            </span>\r\n          )\r\n          : status === 'pending'\r\n            ? (\r\n              <span className='text_color_success'>\r\n                Готовится\r\n              </span>\r\n            )\r\n            : (\r\n              <span className='text_color_success'>\r\n                Создан\r\n              </span>\r\n            )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","import moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nmoment.locale('ru');\r\n\r\nexport default moment;\r\n","import moment from './moment'\r\n\r\nconst formatTime = (time: string) => moment(time).calendar(null, {\r\n  sameDay: '[Сегодня], HH:mm',\r\n  nextDay: '[Завтра], HH:mm',\r\n  nextWeek: '[На следующей неделе], dddd HH:mm',\r\n  lastDay: '[Вчера], HH:mm',\r\n  lastWeek: '[На прошлой неделе], dddd HH:mm',\r\n  sameElse: 'DD.MM.YYYY, HH:mm'\r\n});\r\n\r\nexport default formatTime;\r\n","import React, { useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport orderCardStyles from './order-card.module.css';\r\nimport { TOrder } from '../../services/api';\r\nimport useIngredients from '../../hooks/use-ingredients';\r\nimport TotalPrice from '../total-price/total-price';\r\nimport IngredientPreview from '../inredient-preview/ingredient-preview';\r\nimport Status from '../status/status';\r\nimport formatTime from '../../utils/format-time';\r\n\r\ntype TOrderProps = {\r\n  order: TOrder;\r\n  onClick?: (e: React.SyntheticEvent) => void;\r\n  showStatus?: boolean;\r\n};\r\n\r\nconst OrderCard: React.FC<TOrderProps> = ({\r\n  order,\r\n  onClick,\r\n  showStatus = false\r\n}) => {\r\n  const { items, collect, calculateAmount } = useIngredients();\r\n\r\n  const cardClasses = classNames(orderCardStyles['card'], 'p-6 mb-4');\r\n  const dateClasses = classNames(orderCardStyles['date'], 'text text_type_main-default text_color_inactive');\r\n  const moreClasses = classNames(orderCardStyles['more'], 'text text_type_digits-default');\r\n\r\n  const { images, totalAmount } = useMemo(() => {\r\n    const items = collect(order.ingredients);\r\n    const totalAmount = calculateAmount(items);\r\n    const sliced = items.slice(0, 6);\r\n    const images = sliced.map((ingredient, index) => {\r\n      const left = `${index * 48}px`;\r\n      const zIndex = 6 - index;\r\n      const isLast = index === sliced.length - 1;\r\n      const diff = items.length - sliced.length;\r\n      const style = {\r\n        position: 'absolute',\r\n        left,\r\n        zIndex\r\n      };\r\n\r\n      return ingredient && (\r\n        <IngredientPreview\r\n          key={index}\r\n          style={style}\r\n          name={ingredient.name}\r\n          image={ingredient.image}\r\n        >\r\n          {\r\n            isLast && diff > 0 && (\r\n              <div className={moreClasses}>+{diff}</div>\r\n            )\r\n          }\r\n        </IngredientPreview>\r\n      );\r\n    });\r\n\r\n    return {\r\n      images,\r\n      totalAmount\r\n    };\r\n  }, [items, calculateAmount, collect, moreClasses, order.ingredients]);\r\n\r\n  const date = useMemo(() => formatTime(order.createdAt), [order.createdAt]);\r\n\r\n  return (\r\n    <div className={cardClasses} onClick={onClick}>\r\n      <div className={orderCardStyles['header']}>\r\n        <div className=\"text text_type_digits-default\">\r\n          #{order.number}\r\n        </div>\r\n        <div className={dateClasses}>\r\n          {date}\r\n        </div>\r\n      </div>\r\n      <div className={orderCardStyles['body']}>\r\n        <div className=\"mb-6\">\r\n          <h5 className=\"text text_type_main-medium mt-6\">\r\n            {order.name}\r\n          </h5>\r\n          {showStatus && (\r\n            <Status\r\n              status={order.status}\r\n              className=\"mt-2\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className={orderCardStyles['meta']}>\r\n          <div className={orderCardStyles['images-stack']}>\r\n            {images}\r\n          </div>\r\n          <TotalPrice amount={totalAmount.toString()} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderCard;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport ProfileLayout from '../../components/layout/profile/profile';\r\nimport useOrderHistory from '../../hooks/use-order-history';\r\nimport OrderCard from '../../components/order-card/order-card';\r\nimport CustomScroll from '../../components/custom-scroll/custom-scroll';\r\n\r\nconst History: React.FC = () => {\r\n  const { orders, init, close } = useOrderHistory();\r\n\r\n  const { path } = useRouteMatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    init();\r\n\r\n    return () => {\r\n      close();\r\n    };\r\n  }, []);\r\n\r\n  const onOrderClick = (number: number) => () => {\r\n    history.push({\r\n      pathname: `${path}/${number}`,\r\n      state: { background: location }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ProfileLayout\r\n      description=\"В этом разделе вы можете просмотреть свою историю заказов\"\r\n      content={\r\n        <CustomScroll className=\"mt-10\" grow>\r\n          {\r\n            orders.map((order) => (\r\n              <OrderCard\r\n                key={order._id}\r\n                order={order}\r\n                showStatus\r\n                onClick={onOrderClick(order.number)}\r\n              />\r\n            ))\r\n          }\r\n        </CustomScroll>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Col from '../../components/grid/col/col';\r\nimport Container from '../../components/grid/container/container';\r\nimport Row from '../../components/grid/row/row';\r\nimport noMatchStyles from './no-match.module.css';\r\n\r\nconst NoMatch: React.FC = () => (\r\n  <Container>\r\n    <Row className={noMatchStyles['row']}>\r\n      <Col mod=\"6\" className=\"ml-auto mr-auto\">\r\n        <h5 className=\"text text_type_main-large mb-5\">Упс! 404 Ошибка</h5>\r\n        <p className=\"text text_type_main-default\">\r\n          Страница, которую вы запросили не найдена. Проверьте адрес или попробуйте&nbsp;\r\n          <Link to=\"/\" className=\"link\">Главную</Link>\r\n        </p>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default NoMatch;\r\n","import api, { TOrder } from '../api';\r\nimport { AppThunk } from '../store';\r\nimport { setLastError } from './common';\r\nimport {\r\n  ORDER_INFO_ERROR,\r\n  ORDER_INFO_CLEAR,\r\n  ORDER_INFO_FULFILLED,\r\n  ORDER_INFO_PENING,\r\n  TOrderInfoErrorAction,\r\n  TOrderInfoFulfilledAction,\r\n  TOrderInfoClearAction\r\n} from '../action-types/order-info'\r\n\r\nexport const setLoading = () => ({\r\n  type: ORDER_INFO_PENING\r\n});\r\n\r\nexport const setError = (): TOrderInfoErrorAction => ({\r\n  type: ORDER_INFO_ERROR,\r\n});\r\n\r\nexport const setOrder = (order: TOrder | undefined): TOrderInfoFulfilledAction => ({\r\n  type: ORDER_INFO_FULFILLED,\r\n  payload: order\r\n});\r\n\r\nexport const clearOrder = (): TOrderInfoClearAction => ({\r\n  type: ORDER_INFO_CLEAR\r\n});\r\n\r\nexport const getOrder: AppThunk = (number: number) => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const order = await api.order.get(number);\r\n    dispatch(setOrder(order));\r\n  } catch (err: any) {\r\n    dispatch(setLastError(err));\r\n    dispatch(setError());\r\n  }\r\n};\r\n","import { getOrder, clearOrder } from '../services/actions/order-info';\r\nimport { useSelector, useDispatch } from '../services/store';\r\n\r\nconst useOrderInfo = () => {\r\n  const dispatch = useDispatch();\r\n  const get = (number: number) => dispatch(getOrder(number));\r\n  const clear = () => dispatch((clearOrder()))\r\n  const orderInfo = useSelector((store) => store.orderInfo);\r\n  \r\n  return {\r\n    ...orderInfo,\r\n    clear,\r\n    get\r\n  };\r\n};\r\n\r\nexport default useOrderInfo;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { TIngredient } from '../../../services/api';\r\nimport IngredientPreview from '../../inredient-preview/ingredient-preview';\r\nimport ingredientRowStyles from './ingredient-row.module.css';\r\nimport TotalPrice from '../../total-price/total-price';\r\n\r\ntype TIngredientRowProps = {\r\n  ingredient: TIngredient;\r\n};\r\n\r\nconst IngredientRow: React.FC<TIngredientRowProps> = ({\r\n  ingredient\r\n}) => {\r\n  const rowClasses = classNames(ingredientRowStyles['row'], 'mb-4');\r\n  const amount = `${ingredient.count} x ${ingredient.price}`;\r\n\r\n  return (\r\n    <div className={rowClasses}>\r\n      <IngredientPreview\r\n        className=\"mr-4\"\r\n        name={ingredient.name}\r\n        image={ingredient.image_mobile}\r\n      />\r\n      <h5 className=\"text text_type_main-default\">\r\n        {ingredient.name}\r\n      </h5>\r\n      <TotalPrice amount={amount} className=\"ml-auto\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientRow;\r\n","import React, { useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport { TOrder } from '../../services/api';\r\nimport useIngredients from '../../hooks/use-ingredients';\r\nimport IngredientRow from './inredient-row/ingredient-row';\r\nimport CustomScroll from '../custom-scroll/custom-scroll';\r\nimport TotalPrice from '../total-price/total-price';\r\nimport Status from '../status/status';\r\nimport orderInfoStyles from './order-info.module.css';\r\nimport formatTime from '../../utils/format-time';\r\n\r\ntype TOrderInfoProps = {\r\n  order: TOrder;\r\n  withinModal?: boolean;\r\n};\r\n\r\nconst OrderInfo: React.FC<TOrderInfoProps> = ({\r\n  order,\r\n  withinModal = false\r\n}) => {\r\n  const { items, collect, calculateAmount } = useIngredients();\r\n\r\n  const ingredientsToRender = useMemo(\r\n    () => collect(order.ingredients),\r\n    [order.ingredients, items, collect]\r\n  );\r\n\r\n  const date = useMemo(\r\n    () => formatTime(order.createdAt),\r\n    [order.createdAt]\r\n  );\r\n\r\n  const amount = useMemo(\r\n    () => calculateAmount(ingredientsToRender),\r\n    [ingredientsToRender, calculateAmount]\r\n  );\r\n\r\n  const idClasses = classNames('text text_type_digits-default', { 'tac': !withinModal })\r\n  const metaClasses = classNames(orderInfoStyles['meta'], 'mt-10 mb-10');\r\n\r\n  return (\r\n    <div>\r\n      <div className={idClasses}>\r\n        #{order.number}\r\n      </div>\r\n      <h4 className=\"text text text_type_main-medium mt-10 mb-3\">\r\n        {order.name}\r\n      </h4>\r\n      <Status\r\n        status={order.status}\r\n        className=\"mb-15\"\r\n      />\r\n      <h4 className=\"text text text_type_main-medium mb-6\">\r\n        Состав:\r\n      </h4>\r\n      <CustomScroll className={orderInfoStyles['scroll']}>\r\n        {\r\n          ingredientsToRender.map((ingredient) => ingredient && (\r\n            <IngredientRow\r\n              key={ingredient._id}\r\n              ingredient={ingredient}\r\n            />)\r\n          )\r\n        }\r\n      </CustomScroll>\r\n      <div className={metaClasses}>\r\n        <span className=\"text text_type_main-default text_color_inactive\">{date}</span>\r\n        <TotalPrice amount={amount.toString()} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Base from '../../components/layout/base/base';\r\nimport Row from '../../components/grid/row/row';\r\nimport Col from '../../components/grid/col/col';\r\nimport NoMatch from '../no-match/no-match';\r\nimport useOrderInfo from '../../hooks/use-order-info';\r\nimport OrderInfo from '../../components/order-info/order-info';\r\n\r\nconst Order: React.FC = () => {\r\n  const { get, order, isPending, clear } = useOrderInfo();\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    get(+id);\r\n\r\n    return () => {\r\n      clear();\r\n    };\r\n  }, []);\r\n\r\n  const notFound = !isPending && !order;\r\n  if (notFound) {\r\n    return <NoMatch />;\r\n  }\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Base>\r\n      <Row>\r\n        <Col mod=\"6\" align=\"center\" className=\"pt-20\">\r\n          <OrderInfo order={order} />\r\n        </Col>\r\n      </Row>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport { useRouteMatch, Switch, Route } from 'react-router-dom';\r\nimport Profile from './profile';\r\nimport History from './history';\r\nimport Order from '../order/order';\r\n\r\nconst Index: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path={path} exact>\r\n          <Profile />\r\n        </Route>\r\n        <Route path={`${path}/orders`} exact>\r\n          <History />\r\n        </Route>\r\n        <Route path={`${path}/orders/:id`} exact>\r\n          <Order />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","/* eslint-disable */\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useAuth from '../../hooks/use-auth';\r\n\r\nconst Logout: React.FC = () => {\r\n  const { logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    logout(() => history.replace({ pathname: '/login' }));\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Logout;\r\n","import { feedWsClose, feedWsInit } from '../services/actions/feed';\r\nimport { useSelector, useDispatch } from '../services/store';\r\n\r\nconst useFeed = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useSelector((store) => store.feed)\r\n  const init = () => dispatch(feedWsInit());\r\n  const close = () => dispatch(feedWsClose());\r\n\r\n  return {\r\n    ...history,\r\n    init,\r\n    close\r\n  };\r\n};\r\n\r\nexport default useFeed;\r\n","import { TOrdersMessage } from '../api';\r\nimport {\r\n  TFeedWsInit,\r\n  TFeedWsClose,\r\n  TFeedWsClosed,\r\n  TFeedWsError,\r\n  TFeedWsMessage,\r\n  TFeedWsSucess,\r\n  FEED_WS_INIT,\r\n  FEED_WS_CLOSE,\r\n  FEED_WS_CLOSED,\r\n  FEED_WS_ERROR,\r\n  FEED_WS_MESSAGE,\r\n  FEED_WS_SUCCESS\r\n} from '../action-types/feed';\r\n\r\nexport const feedWsInit = (): TFeedWsInit => ({\r\n  type: FEED_WS_INIT,\r\n});\r\n\r\nexport const feedWsSuccess = (): TFeedWsSucess => ({\r\n  type: FEED_WS_SUCCESS\r\n});\r\n\r\nexport const feedWsError = (): TFeedWsError => ({\r\n  type: FEED_WS_ERROR\r\n});\r\n\r\nexport const feedWsClosed = (): TFeedWsClosed => ({\r\n  type: FEED_WS_CLOSED\r\n});\r\n\r\nexport const feedWsClose = (): TFeedWsClose => ({\r\n  type: FEED_WS_CLOSE\r\n});\r\n\r\nexport const feedWsMessage = (payload: TOrdersMessage): TFeedWsMessage => ({\r\n  type: FEED_WS_MESSAGE,\r\n  payload\r\n});\r\n","import React, { useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport dynamicColStyles from './dynamic-col.module.css';\r\n\r\ntype TDynamicColProps = {\r\n  items?: number[];\r\n  perColumn?: number;\r\n  label: string;\r\n  done?: boolean;\r\n};\r\n\r\nconst DynamicCol: React.FC<TDynamicColProps> = ({\r\n  items = [],\r\n  label,\r\n  perColumn = 5,\r\n  done = false,\r\n}) => {\r\n\r\n  const itemClasses = classNames('text text_type_digits-default mb-2', { [dynamicColStyles['done']]: done });\r\n\r\n  const itemsToRender = useMemo(() => items.reduce((acc: number[][], current, index) => {\r\n    const idx = Math.floor(index / perColumn);\r\n    acc[idx] = acc[idx] || [];\r\n    acc[idx].push(current);\r\n    return acc;\r\n  }, []), [items])\r\n\r\n  return (\r\n    <div className={classNames(dynamicColStyles['wrapper'], 'custom-scroll')}>\r\n      <h5 className=\"text text_type_main-medium mb-6\">{label}</h5>\r\n      <div className={dynamicColStyles['columns']}>\r\n        {itemsToRender.map((column, i) => (\r\n          <div className={dynamicColStyles['column']} key={i}>\r\n            {column.map((item, j) => (\r\n              <div className={itemClasses} key={j}>\r\n                {item}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicCol;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport Base from '../../components/layout/base/base';\r\nimport Col from '../../components/grid/col/col';\r\nimport Row from '../../components/grid/row/row';\r\nimport OrderCard from '../../components/order-card/order-card';\r\nimport useFeed from '../../hooks/use-feed';\r\nimport CustomScroll from '../../components/custom-scroll/custom-scroll';\r\nimport DynamicCol from '../../components/dynamic-col/dynamic-col';\r\n\r\nconst Feed: React.FC = () => {\r\n  const { init, close, orders, total, totalToday } = useFeed();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    init();\r\n    return () => {\r\n      close();\r\n    };\r\n  }, []);\r\n\r\n  const done = useMemo(() => orders\r\n    .filter((order) => order.status === 'done')\r\n    .map((order) => order.number), [orders]);\r\n  const preparing = useMemo(() => orders\r\n    .filter((order) => order.status !== 'done')\r\n    .map((order) => order.number), [orders]);\r\n\r\n  const onOrderClick = (number: number) => () => {\r\n    history.push({\r\n      pathname: `/feed/${number}`,\r\n      state: { background: location }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Base>\r\n      <h5 className=\"text text_type_main-large mb-6 mt-10\">\r\n        Лента заказов\r\n      </h5>\r\n      <Row>\r\n        <Col mod=\"6\" >\r\n          <CustomScroll grow threshold={20}>\r\n            {\r\n              orders.map((order) => (\r\n                <OrderCard\r\n                  key={order._id}\r\n                  order={order}\r\n                  onClick={onOrderClick(order.number)}\r\n                />\r\n              ))\r\n            }\r\n          </CustomScroll>\r\n        </Col>\r\n        <Col mod=\"6\" className=\"pl-10\">\r\n          <Row className=\"mb-15\">\r\n            <Col mod=\"6\">\r\n              <DynamicCol label=\"Готовы:\" items={done} done />\r\n            </Col>\r\n            <Col mod=\"6\">\r\n              <DynamicCol label=\"В работе:\" items={preparing} />\r\n            </Col>\r\n          </Row>\r\n          <h5 className=\"text text_type_main-medium\">Выполнено за все время:</h5>\r\n          <div className=\"text text_glowing text_type_digits-large mb-15\">{total}</div>\r\n          <h5 className=\"text text_type_main-medium\">Выполнено за сегодня:</h5>\r\n          <div className=\"text text_glowing text_type_digits-large\">{totalToday}</div>\r\n        </Col>\r\n      </Row>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport ingredientDetailsStyles from './ingredient-details.module.css';\r\nimport { TIngredient } from '../../services/api';\r\n\r\ntype TIngredientDetailsProps = {\r\n  ingredient: TIngredient;\r\n  withinModal?: boolean;\r\n};\r\n\r\nconst IngredientDetails: React.FC<TIngredientDetailsProps> = ({\r\n  ingredient,\r\n  withinModal = false,\r\n}) => {\r\n  const {\r\n    name,\r\n    calories,\r\n    proteins,\r\n    fat,\r\n    carbohydrates,\r\n    image_large,\r\n  } = ingredient;\r\n\r\n  const titleClasses = classNames(\r\n    ingredientDetailsStyles['title'],\r\n    'text text_type_main-large pr-7',\r\n    {\r\n      'mr-auto': withinModal\r\n    }\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <h5 className={titleClasses}>\r\n        Детали ингредиента\r\n      </h5>\r\n      <img src={image_large} alt={name} />\r\n      <h5 className={classNames(ingredientDetailsStyles['name'], 'mt-4 mb-8 text text_type_main-medium')}>\r\n        {name}\r\n      </h5>\r\n      <div className={ingredientDetailsStyles['properties']}>\r\n        <div className={classNames(ingredientDetailsStyles['property'], 'pr-5')}>\r\n          <span className={classNames(ingredientDetailsStyles['property-label'], 'text text_type_main-small text_color_inactive')}>\r\n            Калорий,ккал\r\n          </span>\r\n          <span className={classNames(ingredientDetailsStyles['property-value'], 'text text_type_digits-default text_color_inactive')}>\r\n            {calories}\r\n          </span>\r\n        </div>\r\n        <div className={classNames(ingredientDetailsStyles['property'], 'pr-5')}>\r\n          <span className={classNames(ingredientDetailsStyles['property-label'], 'text text_type_main-small text_color_inactive')}>\r\n            Белки,г\r\n          </span>\r\n          <span className={classNames(ingredientDetailsStyles['property-value'], 'text text_type_digits-default text_color_inactive')}>\r\n            {proteins}\r\n          </span>\r\n        </div>\r\n        <div className={classNames(ingredientDetailsStyles['property'], 'pr-5')}>\r\n          <span className={classNames(ingredientDetailsStyles['property-label'], 'text text_type_main-small text_color_inactive')}>\r\n            Жиры,г\r\n          </span>\r\n          <span className={classNames(ingredientDetailsStyles['property-value'], 'text text_type_digits-default text_color_inactive')}>\r\n            {fat}\r\n          </span>\r\n        </div>\r\n        <div className={`${ingredientDetailsStyles['property']}`}>\r\n          <span className={classNames(ingredientDetailsStyles['property-label'], 'text text_type_main-small text_color_inactive')}>\r\n            Углеводы,г\r\n          </span>\r\n          <span className={classNames(ingredientDetailsStyles['property-value'], 'text text_type_digits-default text_color_inactive')}>\r\n            {carbohydrates}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientDetails;\r\n","import React from 'react';\r\nimport Skeleton from '../../../components/skeleton/skeleton';\r\n\r\nconst IngredientSkeleton: React.FC = () => (\r\n  <>\r\n    <Skeleton width=\"240px\" height=\"240px\" className=\"mt-4\" variant=\"rounded\" />\r\n    <Skeleton width=\"240px\" height=\"30px\" className=\"mt-8 mb-4\" />\r\n    <div className=\"d-flex space-between\" style={{ width: '240px' }}>\r\n      <Skeleton width=\"20%\" height=\"30px\" />\r\n      <Skeleton width=\"20%\" height=\"30px\" />\r\n      <Skeleton width=\"20%\" height=\"30px\" />\r\n      <Skeleton width=\"20%\" height=\"30px\" />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default IngredientSkeleton;\r\n","import React, { useMemo, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport IngredientDetails from '../../components/ingredient-details/ingredient-details';\r\nimport NoMatch from '../no-match/no-match';\r\nimport Col from '../../components/grid/col/col';\r\nimport Row from '../../components/grid/row/row';\r\nimport Base from '../../components/layout/base/base';\r\nimport useIngredients from '../../hooks/use-ingredients';\r\nimport IngredientSkeleton from './ingredient-skeleton/ingredient-skeleton';\r\nimport { TIngredient } from '../../services/api';\r\n\r\nconst Ingredient = () => {\r\n  const { items, isLoading } = useIngredients();\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const firstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n    }\r\n  });\r\n\r\n  const ingredient = useMemo(\r\n    () => items.find((item: TIngredient) => item._id === id),\r\n    [id, items]\r\n  );\r\n\r\n  const notFound = !isLoading && !ingredient && !firstRender.current;\r\n  if (notFound) {\r\n    return <NoMatch />;\r\n  }\r\n\r\n  return (\r\n    <Base>\r\n      <Row>\r\n        <Col mod=\"6\" align=\"center\" className=\"d-flex flex-column align-items-center pt-30\">\r\n          {\r\n            ingredient\r\n              ? <IngredientDetails ingredient={ingredient} />\r\n              : <IngredientSkeleton />\r\n          }\r\n        </Col>\r\n      </Row>\r\n    </Base>\r\n  );\r\n};\r\n\r\nexport default Ingredient;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport ModalBase from '../../modal/modal';\r\nimport useOrderInfo from '../../../hooks/use-order-info';\r\nimport NoMatch from '../../../pages/no-match/no-match';\r\nimport OrderInfo from '../order-info';\r\n\r\ntype TModalProps = {\r\n  redirectTo?: string;\r\n};\r\n\r\nconst Modal: React.FC<TModalProps> = ({\r\n  redirectTo = '/'\r\n}) => {\r\n  const { get, order, isPending, clear } = useOrderInfo();\r\n  const { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    get(+id);\r\n\r\n    return () => {\r\n      clear();\r\n    };\r\n  }, []);\r\n\r\n  const notFound = !isPending && !order;\r\n  if (notFound) {\r\n    return <NoMatch />;\r\n  }\r\n\r\n  const closeModal = () => history.goBack();\r\n\r\n  return order ? (\r\n    <ModalBase\r\n      className=\"p-10\"\r\n      onRequestClose={closeModal}\r\n    >\r\n      <OrderInfo order={order} withinModal={true} />\r\n    </ModalBase>\r\n  ) : null;\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useMemo } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport Modal from '../modal/modal';\r\nimport useIngredients from '../../hooks/use-ingredients';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport { TIngredient } from '../../services/api';\r\n\r\nconst IngredientModal: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n  const { items } = useIngredients();\r\n\r\n  const ingredient = useMemo(\r\n    () => items.find((item: TIngredient) => item._id === id),\r\n    [id, items]\r\n  );\r\n\r\n  const closeModal = () => history.goBack();\r\n\r\n  return ingredient ? (\r\n    <Modal\r\n      className=\"pt-10 pr-10 pb-15 pl-10\"\r\n      onRequestClose={closeModal}\r\n    >\r\n      <IngredientDetails\r\n        ingredient={ingredient}\r\n        withinModal\r\n      />\r\n    </Modal>\r\n  ) : null;\r\n};\r\n\r\nexport default IngredientModal;\r\n","import React from 'react';\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\nimport ProtectedRoute from '../protected-route/protected-route';\r\nimport Home from '../../pages/home/home';\r\nimport Register from '../../pages/register/register';\r\nimport Login from '../../pages/login/login';\r\nimport ResetPassword from '../../pages/reset-password/reset-password';\r\nimport ForgotPassword from '../../pages/forgot-password/forgot-password';\r\nimport Profile from '../../pages/profile';\r\nimport NoMatch from '../../pages/no-match/no-match';\r\nimport Logout from '../../pages/logout/logout';\r\nimport Feed from '../../pages/feed/feed';\r\nimport Order from '../../pages/order/order';\r\nimport Ingredient from '../../pages/ingredient/ingredient';\r\nimport OrderInfoModal from '../../components/order-info/modal/modal';\r\nimport IngredientModal from '../ingredient-modal/ingredient-modal';\r\nimport { TState } from '../../types/history';\r\n\r\nconst CustomSwitch: React.FC = () => {\r\n  const location = useLocation<TState>();\r\n  const background = location.state && location.state.background;\r\n\r\n  return (\r\n    <>\r\n      <Switch location={background || location}>\r\n        <Route path=\"/\" exact>\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/ingredients/:id\" exact>\r\n          <Ingredient />\r\n        </Route>\r\n        <Route path=\"/login\" exact>\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/register\" exact>\r\n          <Register />\r\n        </Route>\r\n        <Route path=\"/reset-password\" exact>\r\n          <ResetPassword />\r\n        </Route>\r\n        <Route path=\"/forgot-password\" exact>\r\n          <ForgotPassword />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile\">\r\n          <Profile />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/logout\" exact>\r\n          <Logout />\r\n        </ProtectedRoute>\r\n        <Route path=\"/feed\" exact>\r\n          <Feed />\r\n        </Route>\r\n        <Route path=\"/feed/:id\" exact>\r\n          <Order />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <NoMatch />\r\n        </Route>\r\n      </Switch>\r\n      {\r\n        background && (\r\n          <Route path=\"/ingredients/:id\" exact>\r\n            <IngredientModal />\r\n          </Route>\r\n        )\r\n      }\r\n      {\r\n        background && (\r\n          <Route path=\"/feed/:id\" exact>\r\n            <OrderInfoModal redirectTo=\"/feed\" />\r\n          </Route>\r\n        )\r\n      }\r\n      {\r\n        background && (\r\n          <ProtectedRoute path=\"/profile/orders/:id\" exact>\r\n            <OrderInfoModal redirectTo=\"/profile/orders\" />\r\n          </ProtectedRoute>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomSwitch;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router\r\n} from 'react-router-dom';\r\nimport useAuth from '../../hooks/use-auth';\r\nimport WithLoader from '../with-loader/with-loader';\r\nimport CustomSwitch from '../custom-switch/custom-switch';\r\nimport useIngredients from '../../hooks/use-ingredients';\r\n\r\nconst App: React.FC = () => {\r\n  const { isLoading, getUser } = useAuth();\r\n  const { getItems } = useIngredients();\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    getItems();\r\n  }, []);\r\n\r\n  return (\r\n    <WithLoader isLoading={isLoading}>\r\n      <Router>\r\n        <CustomSwitch />\r\n      </Router>\r\n    </WithLoader>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS,\r\n      getFID,\r\n      getFCP,\r\n      getLCP,\r\n      getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@ya.praktikum/react-developer-burger-ui-components';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './services/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"order-card_card__23EZk\",\"header\":\"order-card_header__2rGvy\",\"image-gradient\":\"order-card_image-gradient__SkzH2\",\"more\":\"order-card_more__7I2TN\",\"image-wrapper\":\"order-card_image-wrapper__FbEVb\",\"image\":\"order-card_image__1sDDk\",\"images-stack\":\"order-card_images-stack__2mOJD\",\"meta\":\"order-card_meta__3RyEp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"bun-dropzone_item__3LI-M\",\"placeholder\":\"bun-dropzone_placeholder__gK0lK\",\"overlay\":\"bun-dropzone_overlay__3QVdm\",\"top\":\"bun-dropzone_top__2ZaHH\",\"bottom\":\"bun-dropzone_bottom__20vn9\",\"overlay-title\":\"bun-dropzone_overlay-title__2xzRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ingredients-dropzone_item__haNAE\",\"handle\":\"ingredients-dropzone_handle__2rQ_l\",\"scroll\":\"ingredients-dropzone_scroll__1jGX_\",\"wrapper\":\"ingredients-dropzone_wrapper__24a21\",\"placeholder\":\"ingredients-dropzone_placeholder__YI5Po\",\"overlay\":\"ingredients-dropzone_overlay__26CHS\",\"overlay-title\":\"ingredients-dropzone_overlay-title__1MDjq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient-card_card__3NLvn\",\"image\":\"ingredient-card_image__5l3_h\",\"title\":\"ingredient-card_title__262G8\",\"price\":\"ingredient-card_price__6A_o-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skeleton\":\"skeleton_skeleton__8dWwW\",\"skeleton-animation\":\"skeleton_skeleton-animation__1p7G7\",\"rounded\":\"skeleton_rounded__151dn\",\"text\":\"skeleton_text__3X27c\",\"rectangular\":\"skeleton_rectangular__ca8K7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"order-details_card__2XO-c\",\"close-btn\":\"order-details_close-btn__3iChb\",\"description\":\"order-details_description__2MA-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"register-form_form__2TdHn\",\"body\":\"register-form_body__1Yr62\",\"footer\":\"register-form_footer__27HLi\",\"header\":\"register-form_header__1D75L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"dynamic-col_wrapper__3QQAR\",\"columns\":\"dynamic-col_columns__apf-z\",\"column\":\"dynamic-col_column__MVTBk\",\"done\":\"dynamic-col_done___oVyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu-item\":\"menu-item_menu-item__16fxq\",\"icon\":\"menu-item_icon__2Mp59\",\"active\":\"menu-item_active__3Od3O\",\"vertical\":\"menu-item_vertical__2E6qj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image-gradient\":\"ingredient-preview_image-gradient__3aQqP\",\"more\":\"ingredient-preview_more__3HRf5\",\"image-wrapper\":\"ingredient-preview_image-wrapper__XuHiB\",\"image\":\"ingredient-preview_image__15aUD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs-container\":\"burger-ingredients_tabs-container__2P5rq\",\"grid\":\"burger-ingredients_grid__sk81X\",\"item\":\"burger-ingredients_item__34OXk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs-list\":\"tabs_tabs-list__1P5Tm\",\"tab-item\":\"tabs_tab-item__2Yr-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"ingredients-skeleton_grid__3h5sX\",\"card\":\"ingredients-skeleton_card__3PbiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1Nr3T\",\"content\":\"modal_content__omGp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"sortable-ingredient_item__1C0tO\",\"handle\":\"sortable-ingredient_handle__2_uCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col-base\":\"col_col-base__2aVAU\",\"col\":\"col_col__fMdbw col_col-base__2aVAU\",\"col-3\":\"col_col-3__27Ph0 col_col-base__2aVAU\",\"col-4\":\"col_col-4__28J_O col_col-base__2aVAU\",\"col-6\":\"col_col-6__3Qoj8 col_col-base__2aVAU\",\"col-auto\":\"col_col-auto__81ECA col_col-base__2aVAU\",\"left\":\"col_left__3yb1m\",\"right\":\"col_right__2USG9\",\"center\":\"col_center__3jfJG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__o5ZuH\",\"row\":\"menu_row__ajgxN\",\"column\":\"menu_column__MvsQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notice\":\"notice_notice__1UXKt\",\"close\":\"notice_close__3Iw7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__20VQX\",\"container\":\"app-header_container__3TbTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"order-info_scroll__1w9io\",\"meta\":\"order-info_meta__3q9rZ\"};"],"sourceRoot":""}